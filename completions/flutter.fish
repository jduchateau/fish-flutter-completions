# Output of https://github.com/qiuxiang/flutter-fish-completions
# flutter version 2.2.3

complete -c flutter -f -n "__fish_seen_subcommand_from channel" -a "(flutter channel | tail -n +2 | sed 's/\s//g' | sed 's/*\(\w\+\)/\1\tcurrent/')"
function __fish_flutter_devices
    flutter devices | tail -n +3 | sed -r 's/ \(\w+\)\s+• /\t/g'
end
function __fish_flutter_emulators
    flutter emulators | head -n -7 | tail -n +3 | sed -r 's/(\w+)(\s+)• /\1\t/'
end
complete -c flutter -l help -d "Print this usage information." -s h
complete -c flutter -l verbose -d "Noisy logging, including all shell commands executed.If used with \"--help\", shows hidden options. If used with \"flutter doctor\", shows additional diagnostic information. (Use \"-vv\" to force verbose logging in those cases.)" -s v
complete -c flutter -l device-id -d "Target device id or name (prefixes allowed)." -s d -xa "(__fish_flutter_devices)"
complete -c flutter -l version -d "Reports the version of this tool."
complete -c flutter -l suppress-analytics -d "Suppress analytics reporting when this command runs."
set -l commands analyze assemble attach bash-completion build channel clean config create devices doctor downgrade drive emulators format gen-l10n install logs precache pub run screenshot symbolize test upgrade
complete -c flutter -f -n "not __fish_seen_subcommand_from $commands" -a analyze -d "Analyze the project's Dart code."
complete -c flutter -l help -d "Print this usage information." -s h -n "__fish_seen_subcommand_from analyze"
complete -c flutter -l current-package -d "Analyze the current project, if applicable.(defaults to on)" -n "__fish_seen_subcommand_from analyze"
complete -c flutter -l no-current-package -d "Analyze the current project, if applicable.(defaults to on)" -n "__fish_seen_subcommand_from analyze"
complete -c flutter -l watch -d "Run analysis continuously, watching the filesystem for changes." -n "__fish_seen_subcommand_from analyze"
complete -c flutter -l write -d "Also output the results to a file. This is useful with \"--watch\" if you want a file to always contain the latest results." -n "__fish_seen_subcommand_from analyze"
complete -c flutter -l pub -d "Whether to run \"flutter pub get\" before executing this command.(defaults to on)" -n "__fish_seen_subcommand_from analyze"
complete -c flutter -l no-pub -d "Whether to run \"flutter pub get\" before executing this command.(defaults to on)" -n "__fish_seen_subcommand_from analyze"
complete -c flutter -l congratulate -d "Show output even when there are no errors, warnings, hints, or lints. Ignored if \"--watch\" is specified.(defaults to on)" -n "__fish_seen_subcommand_from analyze"
complete -c flutter -l no-congratulate -d "Show output even when there are no errors, warnings, hints, or lints. Ignored if \"--watch\" is specified.(defaults to on)" -n "__fish_seen_subcommand_from analyze"
complete -c flutter -l preamble -d "When analyzing the flutter repository, display the number of files that will be analyzed.Ignored if \"--watch\" is specified.(defaults to on)" -n "__fish_seen_subcommand_from analyze"
complete -c flutter -l no-preamble -d "When analyzing the flutter repository, display the number of files that will be analyzed.Ignored if \"--watch\" is specified.(defaults to on)" -n "__fish_seen_subcommand_from analyze"
complete -c flutter -l fatal-infos -d "Treat info level issues as fatal.(defaults to on)" -n "__fish_seen_subcommand_from analyze"
complete -c flutter -l no-fatal-infos -d "Treat info level issues as fatal.(defaults to on)" -n "__fish_seen_subcommand_from analyze"
complete -c flutter -l fatal-warnings -d "Treat warning level issues as fatal.(defaults to on)" -n "__fish_seen_subcommand_from analyze"
complete -c flutter -l no-fatal-warnings -d "Treat warning level issues as fatal.(defaults to on)" -n "__fish_seen_subcommand_from analyze"
complete -c flutter -f -n "not __fish_seen_subcommand_from $commands" -a assemble -d "Assemble and build Flutter resources."
complete -c flutter -l help -d "Print this usage information." -s h -n "__fish_seen_subcommand_from assemble"
complete -c flutter -l define -d "Allows passing configuration to a target, as in \"--define=target=key=value\"." -s d -n "__fish_seen_subcommand_from assemble" -xa "(__fish_flutter_devices)"
complete -c flutter -l performance-measurement-file -d "Output individual target performance to a JSON file." -n "__fish_seen_subcommand_from assemble"
complete -c flutter -l input -d "Allows passing additional inputs with \"--input=key=value\". Unlike defines, additional inputs do not generate a new configuration; instead they are treated as dependencies of the targets that use them." -s i -n "__fish_seen_subcommand_from assemble"
complete -c flutter -l depfile -d "A file path where a depfile will be written. This contains all build inputs and outputs in a Make-style syntax." -n "__fish_seen_subcommand_from assemble"
complete -c flutter -l build-inputs -d "A file path where a newline-separated file containing all inputs used will be written after a build. This file is not included as a build input or output. This file is not written if the build fails for any reason." -n "__fish_seen_subcommand_from assemble"
complete -c flutter -l build-outputs -d "A file path where a newline-separated file containing all outputs created will be written after a build. This file is not included as a build input or output. This file is not written if the build fails for any reason." -n "__fish_seen_subcommand_from assemble"
complete -c flutter -l output -d "A directory where output files will be written. Must be either absolute or relative from the root of the current Flutter project." -s o -n "__fish_seen_subcommand_from assemble"
complete -c flutter -l DartDefines -d "Additional key-value pairs that will be available as constants from the String.fromEnvironment, bool.fromEnvironment, int.fromEnvironment, and double.fromEnvironment constructors.Multiple defines can be passed by repeating \"--dart-define\" multiple times." -n "__fish_seen_subcommand_from assemble"
complete -c flutter -l resource-pool-size -d "The maximum number of concurrent tasks the build system will run." -n "__fish_seen_subcommand_from assemble"
complete -c flutter -f -n "not __fish_seen_subcommand_from $commands" -a attach -d "Attach to a running app."
complete -c flutter -l help -d "Print this usage information." -s h -n "__fish_seen_subcommand_from attach"
complete -c flutter -l debug -d "Build a debug version of your app (default mode)." -n "__fish_seen_subcommand_from attach"
complete -c flutter -l profile -d "Build a version of your app specialized for performance profiling." -n "__fish_seen_subcommand_from attach"
complete -c flutter -l target -d "The main entry-point file of the application, as run on the device.If the \"--target\" option is omitted, but a file name is provided on the command line, then that is used instead.(defaults to \"lib/main.dart\")" -s t -n "__fish_seen_subcommand_from attach"
complete -c flutter -l device-vmservice-port -d "Look for vmservice connections only from the specified port.Specifying port 0 (the default) will accept the first vmservice discovered." -n "__fish_seen_subcommand_from attach"
complete -c flutter -l host-vmservice-port -d "When a device-side vmservice port is forwarded to a host-side port, use this value as the host port.Specifying port 0 (the default) will find a random free host port." -n "__fish_seen_subcommand_from attach"
complete -c flutter -l dart-define -d "Additional key-value pairs that will be available as constants from the String.fromEnvironment, bool.fromEnvironment, int.fromEnvironment, and double.fromEnvironment constructors.Multiple defines can be passed by repeating \"--dart-define\" multiple times." -n "__fish_seen_subcommand_from attach"
complete -c flutter -l device-user -d "Identifier number for a user or work profile on Android only. Run \"adb shell pm list users\" for available identifiers." -n "__fish_seen_subcommand_from attach"
complete -c flutter -l null-assertions -d "Perform additional null assertions on the boundaries of migrated and un-migrated code. This setting is not currently supported on desktop devices." -n "__fish_seen_subcommand_from attach"
complete -c flutter -l no-null-assertions -d "Perform additional null assertions on the boundaries of migrated and un-migrated code. This setting is not currently supported on desktop devices." -n "__fish_seen_subcommand_from attach"
complete -c flutter -l debug-uri -d "The URL at which the observatory is listening." -n "__fish_seen_subcommand_from attach"
complete -c flutter -l app-id -d "The package name (Android) or bundle identifier (iOS) for the app. This can be specified to avoid being prompted if multiple observatory ports are advertised.If you have multiple devices or emulators running, you should include the device hostname as well, e.g. \"com.example.myApp@my-iphone\".This parameter is case-insensitive." -n "__fish_seen_subcommand_from attach"
complete -c flutter -l pid-file -d "Specify a file to write the process ID to. You can send SIGUSR1 to trigger a hot reload and SIGUSR2 to trigger a hot restart. The file is created when the signal handlers are hooked and deleted when they are removed." -n "__fish_seen_subcommand_from attach"
complete -c flutter -l track-widget-creation -d "Track widget creation locations. This enables features such as the widget inspector. This parameter is only functional in debug mode (i.e. when compiling JIT, not AOT).(defaults to on)" -n "__fish_seen_subcommand_from attach"
complete -c flutter -l no-track-widget-creation -d "Track widget creation locations. This enables features such as the widget inspector. This parameter is only functional in debug mode (i.e. when compiling JIT, not AOT).(defaults to on)" -n "__fish_seen_subcommand_from attach"
complete -c flutter -l dds-port -d "When this value is provided, the Dart Development Service (DDS) will be bound to the provided port.Specifying port 0 (the default) will find a random free port." -n "__fish_seen_subcommand_from attach"
complete -c flutter -l device-timeout -d "Time in seconds to wait for devices to attach. Longer timeouts may be necessary for networked devices." -n "__fish_seen_subcommand_from attach"
complete -c flutter -f -n "not __fish_seen_subcommand_from $commands" -a bash-completion -d "Output command line shell completion setup scripts."
complete -c flutter -l help -d "Print this usage information." -s h -n "__fish_seen_subcommand_from bash-completion"
complete -c flutter -l overwrite -d "Causes the given shell completion setup script to be overwritten if it already exists." -n "__fish_seen_subcommand_from bash-completion"
complete -c flutter -l no-overwrite -d "Causes the given shell completion setup script to be overwritten if it already exists." -n "__fish_seen_subcommand_from bash-completion"
complete -c flutter -f -n "not __fish_seen_subcommand_from $commands" -a build -d "Build an executable app or install bundle."
complete -c flutter -l help -d "Print this usage information." -s h -n "__fish_seen_subcommand_from build"
set -l build_commands aar apk appbundle bundle ios ios-framework ipa web
complete -c flutter -f -n "__fish_seen_subcommand_from build; and not __fish_seen_subcommand_from $build_commands" -a aar -d "Build a repository containing an AAR and a POM file."
complete -c flutter -l help -d "Print this usage information." -s h -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from aar"
complete -c flutter -l debug -d "Build a debug version of the current project.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from aar"
complete -c flutter -l no-debug -d "Build a debug version of the current project.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from aar"
complete -c flutter -l profile -d "Build a version of the current project specialized for performance profiling.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from aar"
complete -c flutter -l no-profile -d "Build a version of the current project specialized for performance profiling.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from aar"
complete -c flutter -l release -d "Build a release version of the current project.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from aar"
complete -c flutter -l no-release -d "Build a release version of the current project.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from aar"
complete -c flutter -l tree-shake-icons -d "Tree shake icon fonts so that only glyphs used by the application remain.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from aar"
complete -c flutter -l no-tree-shake-icons -d "Tree shake icon fonts so that only glyphs used by the application remain.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from aar"
complete -c flutter -l flavor -d "Build a custom app flavor as defined by platform-specific build setup.Supports the use of product flavors in Android Gradle scripts, and the use of custom Xcode schemes." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from aar"
complete -c flutter -l build-number -d "An identifier used as an internal version number.Each build must have a unique identifier to differentiate it from previous builds.It is used to determine whether one build is more recent than another, with higher numbers indicating more recent build.On Android it is used as \"versionCode\".On Xcode builds it is used as \"CFBundleVersion\"." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from aar"
complete -c flutter -l pub -d "Whether to run \"flutter pub get\" before executing this command.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from aar"
complete -c flutter -l no-pub -d "Whether to run \"flutter pub get\" before executing this command.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from aar"
complete -c flutter -l split-debug-info -d "In a release build, this flag reduces application size by storing Dart program symbols in a separate file on the host rather than in the application. The value of the flag should be a directory where program symbol files can be stored for later use. These symbol files contain the information needed to symbolize Dart stack traces. For an app built with this flag, the \"flutter symbolize\" command with the right program symbol file is required to obtain a human readable stack trace.This flag cannot be combined with \"--analyze-size\"." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from aar"
complete -c flutter -l obfuscate -d "In a release build, this flag removes identifiers and replaces them with randomized values for the purposes of source code obfuscation. This flag must always be combined with \"--split-debug-info\" option, the mapping between the values and the original identifiers is stored in the symbol map created in the specified directory. For an app built with this flag, the \"flutter symbolize\" command with the right program symbol file is required to obtain a human readable stack trace.Because all identifiers are renamed, methods like Object.runtimeType, Type.toString, Enum.toString, Stacktrace.toString, Symbol.toString (for constant symbols or those generated by runtime system) will return obfuscated results. Any code or tests that rely on exact names will break." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from aar"
complete -c flutter -l no-obfuscate -d "In a release build, this flag removes identifiers and replaces them with randomized values for the purposes of source code obfuscation. This flag must always be combined with \"--split-debug-info\" option, the mapping between the values and the original identifiers is stored in the symbol map created in the specified directory. For an app built with this flag, the \"flutter symbolize\" command with the right program symbol file is required to obtain a human readable stack trace.Because all identifiers are renamed, methods like Object.runtimeType, Type.toString, Enum.toString, Stacktrace.toString, Symbol.toString (for constant symbols or those generated by runtime system) will return obfuscated results. Any code or tests that rely on exact names will break." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from aar"
complete -c flutter -l dart-define -d "Additional key-value pairs that will be available as constants from the String.fromEnvironment, bool.fromEnvironment, int.fromEnvironment, and double.fromEnvironment constructors.Multiple defines can be passed by repeating \"--dart-define\" multiple times." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from aar"
complete -c flutter -l track-widget-creation -d "Track widget creation locations. This enables features such as the widget inspector. This parameter is only functional in debug mode (i.e. when compiling JIT, not AOT).(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from aar"
complete -c flutter -l no-track-widget-creation -d "Track widget creation locations. This enables features such as the widget inspector. This parameter is only functional in debug mode (i.e. when compiling JIT, not AOT).(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from aar"
complete -c flutter -l null-assertions -d "Perform additional null assertions on the boundaries of migrated and un-migrated code. This setting is not currently supported on desktop devices." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from aar"
complete -c flutter -l no-null-assertions -d "Perform additional null assertions on the boundaries of migrated and un-migrated code. This setting is not currently supported on desktop devices." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from aar"
complete -c flutter -l target-platform -d "The target platform for which the project is compiled.[android-arm (default), android-arm64 (default), android-x86, android-x64 (default)]" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from aar"
complete -c flutter -l output-dir -d "The absolute path to the directory where the repository is generated. By default, this is \"<current-directory>android/build\"." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from aar"
complete -c flutter -f -n "__fish_seen_subcommand_from build; and not __fish_seen_subcommand_from $build_commands" -a apk -d "Build an Android APK file from your app."
complete -c flutter -l help -d "Print this usage information." -s h -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from apk"
complete -c flutter -l tree-shake-icons -d "Tree shake icon fonts so that only glyphs used by the application remain.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from apk"
complete -c flutter -l no-tree-shake-icons -d "Tree shake icon fonts so that only glyphs used by the application remain.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from apk"
complete -c flutter -l target -d "The main entry-point file of the application, as run on the device.If the \"--target\" option is omitted, but a file name is provided on the command line, then that is used instead.(defaults to \"lib/main.dart\")" -s t -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from apk"
complete -c flutter -l debug -d "Build a debug version of your app." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from apk"
complete -c flutter -l profile -d "Build a version of your app specialized for performance profiling." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from apk"
complete -c flutter -l release -d "Build a release version of your app (default mode)." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from apk"
complete -c flutter -l flavor -d "Build a custom app flavor as defined by platform-specific build setup.Supports the use of product flavors in Android Gradle scripts, and the use of custom Xcode schemes." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from apk"
complete -c flutter -l pub -d "Whether to run \"flutter pub get\" before executing this command.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from apk"
complete -c flutter -l no-pub -d "Whether to run \"flutter pub get\" before executing this command.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from apk"
complete -c flutter -l build-number -d "An identifier used as an internal version number.Each build must have a unique identifier to differentiate it from previous builds.It is used to determine whether one build is more recent than another, with higher numbers indicating more recent build.On Android it is used as \"versionCode\".On Xcode builds it is used as \"CFBundleVersion\"." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from apk"
complete -c flutter -l build-name -d "A \"x.y.z\" string used as the version number shown to users.For each new version of your app, you will provide a version number to differentiate it from previous versions.On Android it is used as \"versionName\".On Xcode builds it is used as \"CFBundleShortVersionString\"." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from apk"
complete -c flutter -l split-debug-info -d "In a release build, this flag reduces application size by storing Dart program symbols in a separate file on the host rather than in the application. The value of the flag should be a directory where program symbol files can be stored for later use. These symbol files contain the information needed to symbolize Dart stack traces. For an app built with this flag, the \"flutter symbolize\" command with the right program symbol file is required to obtain a human readable stack trace.This flag cannot be combined with \"--analyze-size\"." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from apk"
complete -c flutter -l obfuscate -d "In a release build, this flag removes identifiers and replaces them with randomized values for the purposes of source code obfuscation. This flag must always be combined with \"--split-debug-info\" option, the mapping between the values and the original identifiers is stored in the symbol map created in the specified directory. For an app built with this flag, the \"flutter symbolize\" command with the right program symbol file is required to obtain a human readable stack trace.Because all identifiers are renamed, methods like Object.runtimeType, Type.toString, Enum.toString, Stacktrace.toString, Symbol.toString (for constant symbols or those generated by runtime system) will return obfuscated results. Any code or tests that rely on exact names will break." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from apk"
complete -c flutter -l no-obfuscate -d "In a release build, this flag removes identifiers and replaces them with randomized values for the purposes of source code obfuscation. This flag must always be combined with \"--split-debug-info\" option, the mapping between the values and the original identifiers is stored in the symbol map created in the specified directory. For an app built with this flag, the \"flutter symbolize\" command with the right program symbol file is required to obtain a human readable stack trace.Because all identifiers are renamed, methods like Object.runtimeType, Type.toString, Enum.toString, Stacktrace.toString, Symbol.toString (for constant symbols or those generated by runtime system) will return obfuscated results. Any code or tests that rely on exact names will break." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from apk"
complete -c flutter -l dart-define -d "Additional key-value pairs that will be available as constants from the String.fromEnvironment, bool.fromEnvironment, int.fromEnvironment, and double.fromEnvironment constructors.Multiple defines can be passed by repeating \"--dart-define\" multiple times." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from apk"
complete -c flutter -l null-assertions -d "Perform additional null assertions on the boundaries of migrated and un-migrated code. This setting is not currently supported on desktop devices." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from apk"
complete -c flutter -l no-null-assertions -d "Perform additional null assertions on the boundaries of migrated and un-migrated code. This setting is not currently supported on desktop devices." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from apk"
complete -c flutter -l analyze-size -d "Whether to produce additional profile information for artifact output size. This flag is only supported on \"--release\" builds. When building for Android, a single ABI must be specified at a time with the \"--target-platform\" flag. When building for iOS, only the symbols from the arm64 architecture are used to analyze code size.This flag cannot be combined with \"--split-debug-info\"." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from apk"
complete -c flutter -l no-analyze-size -d "Whether to produce additional profile information for artifact output size. This flag is only supported on \"--release\" builds. When building for Android, a single ABI must be specified at a time with the \"--target-platform\" flag. When building for iOS, only the symbols from the arm64 architecture are used to analyze code size.This flag cannot be combined with \"--split-debug-info\"." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from apk"
complete -c flutter -l split-per-abi -d "Whether to split the APKs per ABIs. To learn more, see: https://developer.android.com/studio/build/configure-apk-splits#configure-abi-split" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from apk"
complete -c flutter -l target-platform -d "The target platform for which the app is compiled.[android-arm (default), android-arm64 (default), android-x86, android-x64 (default)]" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from apk"
complete -c flutter -l track-widget-creation -d "Track widget creation locations. This enables features such as the widget inspector. This parameter is only functional in debug mode (i.e. when compiling JIT, not AOT).(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from apk"
complete -c flutter -l no-track-widget-creation -d "Track widget creation locations. This enables features such as the widget inspector. This parameter is only functional in debug mode (i.e. when compiling JIT, not AOT).(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from apk"
complete -c flutter -f -n "__fish_seen_subcommand_from build; and not __fish_seen_subcommand_from $build_commands" -a appbundle -d "Build an Android App Bundle file from your app."
complete -c flutter -l help -d "Print this usage information." -s h -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from appbundle"
complete -c flutter -l tree-shake-icons -d "Tree shake icon fonts so that only glyphs used by the application remain.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from appbundle"
complete -c flutter -l no-tree-shake-icons -d "Tree shake icon fonts so that only glyphs used by the application remain.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from appbundle"
complete -c flutter -l target -d "The main entry-point file of the application, as run on the device.If the \"--target\" option is omitted, but a file name is provided on the command line, then that is used instead.(defaults to \"lib/main.dart\")" -s t -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from appbundle"
complete -c flutter -l debug -d "Build a debug version of your app." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from appbundle"
complete -c flutter -l profile -d "Build a version of your app specialized for performance profiling." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from appbundle"
complete -c flutter -l release -d "Build a release version of your app (default mode)." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from appbundle"
complete -c flutter -l flavor -d "Build a custom app flavor as defined by platform-specific build setup.Supports the use of product flavors in Android Gradle scripts, and the use of custom Xcode schemes." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from appbundle"
complete -c flutter -l pub -d "Whether to run \"flutter pub get\" before executing this command.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from appbundle"
complete -c flutter -l no-pub -d "Whether to run \"flutter pub get\" before executing this command.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from appbundle"
complete -c flutter -l build-number -d "An identifier used as an internal version number.Each build must have a unique identifier to differentiate it from previous builds.It is used to determine whether one build is more recent than another, with higher numbers indicating more recent build.On Android it is used as \"versionCode\".On Xcode builds it is used as \"CFBundleVersion\"." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from appbundle"
complete -c flutter -l build-name -d "A \"x.y.z\" string used as the version number shown to users.For each new version of your app, you will provide a version number to differentiate it from previous versions.On Android it is used as \"versionName\".On Xcode builds it is used as \"CFBundleShortVersionString\"." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from appbundle"
complete -c flutter -l split-debug-info -d "In a release build, this flag reduces application size by storing Dart program symbols in a separate file on the host rather than in the application. The value of the flag should be a directory where program symbol files can be stored for later use. These symbol files contain the information needed to symbolize Dart stack traces. For an app built with this flag, the \"flutter symbolize\" command with the right program symbol file is required to obtain a human readable stack trace.This flag cannot be combined with \"--analyze-size\"." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from appbundle"
complete -c flutter -l obfuscate -d "In a release build, this flag removes identifiers and replaces them with randomized values for the purposes of source code obfuscation. This flag must always be combined with \"--split-debug-info\" option, the mapping between the values and the original identifiers is stored in the symbol map created in the specified directory. For an app built with this flag, the \"flutter symbolize\" command with the right program symbol file is required to obtain a human readable stack trace.Because all identifiers are renamed, methods like Object.runtimeType, Type.toString, Enum.toString, Stacktrace.toString, Symbol.toString (for constant symbols or those generated by runtime system) will return obfuscated results. Any code or tests that rely on exact names will break." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from appbundle"
complete -c flutter -l no-obfuscate -d "In a release build, this flag removes identifiers and replaces them with randomized values for the purposes of source code obfuscation. This flag must always be combined with \"--split-debug-info\" option, the mapping between the values and the original identifiers is stored in the symbol map created in the specified directory. For an app built with this flag, the \"flutter symbolize\" command with the right program symbol file is required to obtain a human readable stack trace.Because all identifiers are renamed, methods like Object.runtimeType, Type.toString, Enum.toString, Stacktrace.toString, Symbol.toString (for constant symbols or those generated by runtime system) will return obfuscated results. Any code or tests that rely on exact names will break." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from appbundle"
complete -c flutter -l dart-define -d "Additional key-value pairs that will be available as constants from the String.fromEnvironment, bool.fromEnvironment, int.fromEnvironment, and double.fromEnvironment constructors.Multiple defines can be passed by repeating \"--dart-define\" multiple times." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from appbundle"
complete -c flutter -l track-widget-creation -d "Track widget creation locations. This enables features such as the widget inspector. This parameter is only functional in debug mode (i.e. when compiling JIT, not AOT).(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from appbundle"
complete -c flutter -l no-track-widget-creation -d "Track widget creation locations. This enables features such as the widget inspector. This parameter is only functional in debug mode (i.e. when compiling JIT, not AOT).(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from appbundle"
complete -c flutter -l null-assertions -d "Perform additional null assertions on the boundaries of migrated and un-migrated code. This setting is not currently supported on desktop devices." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from appbundle"
complete -c flutter -l no-null-assertions -d "Perform additional null assertions on the boundaries of migrated and un-migrated code. This setting is not currently supported on desktop devices." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from appbundle"
complete -c flutter -l analyze-size -d "Whether to produce additional profile information for artifact output size. This flag is only supported on \"--release\" builds. When building for Android, a single ABI must be specified at a time with the \"--target-platform\" flag. When building for iOS, only the symbols from the arm64 architecture are used to analyze code size.This flag cannot be combined with \"--split-debug-info\"." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from appbundle"
complete -c flutter -l no-analyze-size -d "Whether to produce additional profile information for artifact output size. This flag is only supported on \"--release\" builds. When building for Android, a single ABI must be specified at a time with the \"--target-platform\" flag. When building for iOS, only the symbols from the arm64 architecture are used to analyze code size.This flag cannot be combined with \"--split-debug-info\"." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from appbundle"
complete -c flutter -l target-platform -d "The target platform for which the app is compiled.[android-arm (default), android-arm64 (default), android-x64 (default)]" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from appbundle"
complete -c flutter -l deferred-components -d "Setting to false disables building with deferred components. All deferred code will be compiled into the base app, and assets act as if they were defined under the regular assets section in pubspec.yaml. This flag has no effect on non-deferred components apps.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from appbundle"
complete -c flutter -l no-deferred-components -d "Setting to false disables building with deferred components. All deferred code will be compiled into the base app, and assets act as if they were defined under the regular assets section in pubspec.yaml. This flag has no effect on non-deferred components apps.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from appbundle"
complete -c flutter -l validate-deferred-components -d "When enabled, deferred component apps will fail to build if setup problems are detected that would prevent deferred components from functioning properly. The tooling also provides guidance on how to set up the project files to pass this verification. Disabling setup verification will always attempt to fully build the app regardless of any problems detected. Builds that are part of CI testing and advanced users with custom deferred components implementations should disable setup verification. This flag has no effect on non-deferred components apps.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from appbundle"
complete -c flutter -l no-validate-deferred-components -d "When enabled, deferred component apps will fail to build if setup problems are detected that would prevent deferred components from functioning properly. The tooling also provides guidance on how to set up the project files to pass this verification. Disabling setup verification will always attempt to fully build the app regardless of any problems detected. Builds that are part of CI testing and advanced users with custom deferred components implementations should disable setup verification. This flag has no effect on non-deferred components apps.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from appbundle"
complete -c flutter -f -n "__fish_seen_subcommand_from build; and not __fish_seen_subcommand_from $build_commands" -a bundle -d "Build the Flutter assets directory from your app."
complete -c flutter -l help -d "Print this usage information." -s h -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from bundle"
complete -c flutter -l tree-shake-icons -d "Tree shake icon fonts so that only glyphs used by the application remain.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from bundle"
complete -c flutter -l no-tree-shake-icons -d "Tree shake icon fonts so that only glyphs used by the application remain.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from bundle"
complete -c flutter -l target -d "The main entry-point file of the application, as run on the device.If the \"--target\" option is omitted, but a file name is provided on the command line, then that is used instead.(defaults to \"lib/main.dart\")" -s t -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from bundle"
complete -c flutter -l build-number -d "An identifier used as an internal version number.Each build must have a unique identifier to differentiate it from previous builds.It is used to determine whether one build is more recent than another, with higher numbers indicating more recent build.On Android it is used as \"versionCode\".On Xcode builds it is used as \"CFBundleVersion\"." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from bundle"
complete -c flutter -l debug -d "Build a debug version of your app (default mode)." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from bundle"
complete -c flutter -l profile -d "Build a version of your app specialized for performance profiling." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from bundle"
complete -c flutter -l release -d "Build a release version of your app." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from bundle"
complete -c flutter -l depfile -d "A file path where a depfile will be written. This contains all build inputs and outputs in a Make-style syntax.(defaults to \"build/snapshot_blob.bin.d\")" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from bundle"
complete -c flutter -l target-platform -d "The architecture for which to build the application.[android-arm (default), android-arm64, android-x86, android-x64, ios, darwin-x64, linux-x64, linux-arm64, windows-x64]" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from bundle"
complete -c flutter -l asset-dir -d "The output directory for the kernel_blob.bin file, the native snapshet, the assets, etc. Can be used to redirect the output when driving the Flutter toolchain from another build system.(defaults to \"build/flutter_assets\")" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from bundle"
complete -c flutter -l pub -d "Whether to run \"flutter pub get\" before executing this command.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from bundle"
complete -c flutter -l no-pub -d "Whether to run \"flutter pub get\" before executing this command.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from bundle"
complete -c flutter -l track-widget-creation -d "Track widget creation locations. This enables features such as the widget inspector. This parameter is only functional in debug mode (i.e. when compiling JIT, not AOT).(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from bundle"
complete -c flutter -l no-track-widget-creation -d "Track widget creation locations. This enables features such as the widget inspector. This parameter is only functional in debug mode (i.e. when compiling JIT, not AOT).(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from bundle"
complete -c flutter -f -n "__fish_seen_subcommand_from build; and not __fish_seen_subcommand_from $build_commands" -a ios -d "Build an iOS application bundle (Mac OS X host only)."
complete -c flutter -l help -d "Print this usage information." -s h -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios"
complete -c flutter -l tree-shake-icons -d "Tree shake icon fonts so that only glyphs used by the application remain.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios"
complete -c flutter -l no-tree-shake-icons -d "Tree shake icon fonts so that only glyphs used by the application remain.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios"
complete -c flutter -l split-debug-info -d "In a release build, this flag reduces application size by storing Dart program symbols in a separate file on the host rather than in the application. The value of the flag should be a directory where program symbol files can be stored for later use. These symbol files contain the information needed to symbolize Dart stack traces. For an app built with this flag, the \"flutter symbolize\" command with the right program symbol file is required to obtain a human readable stack trace.This flag cannot be combined with \"--analyze-size\"." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios"
complete -c flutter -l debug -d "Build a debug version of your app." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios"
complete -c flutter -l profile -d "Build a version of your app specialized for performance profiling." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios"
complete -c flutter -l release -d "Build a release version of your app (default mode)." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios"
complete -c flutter -l target -d "The main entry-point file of the application, as run on the device.If the \"--target\" option is omitted, but a file name is provided on the command line, then that is used instead.(defaults to \"lib/main.dart\")" -s t -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios"
complete -c flutter -l flavor -d "Build a custom app flavor as defined by platform-specific build setup.Supports the use of product flavors in Android Gradle scripts, and the use of custom Xcode schemes." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios"
complete -c flutter -l pub -d "Whether to run \"flutter pub get\" before executing this command.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios"
complete -c flutter -l no-pub -d "Whether to run \"flutter pub get\" before executing this command.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios"
complete -c flutter -l build-number -d "An identifier used as an internal version number.Each build must have a unique identifier to differentiate it from previous builds.It is used to determine whether one build is more recent than another, with higher numbers indicating more recent build.On Android it is used as \"versionCode\".On Xcode builds it is used as \"CFBundleVersion\"." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios"
complete -c flutter -l build-name -d "A \"x.y.z\" string used as the version number shown to users.For each new version of your app, you will provide a version number to differentiate it from previous versions.On Android it is used as \"versionName\".On Xcode builds it is used as \"CFBundleShortVersionString\"." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios"
complete -c flutter -l obfuscate -d "In a release build, this flag removes identifiers and replaces them with randomized values for the purposes of source code obfuscation. This flag must always be combined with \"--split-debug-info\" option, the mapping between the values and the original identifiers is stored in the symbol map created in the specified directory. For an app built with this flag, the \"flutter symbolize\" command with the right program symbol file is required to obtain a human readable stack trace.Because all identifiers are renamed, methods like Object.runtimeType, Type.toString, Enum.toString, Stacktrace.toString, Symbol.toString (for constant symbols or those generated by runtime system) will return obfuscated results. Any code or tests that rely on exact names will break." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios"
complete -c flutter -l no-obfuscate -d "In a release build, this flag removes identifiers and replaces them with randomized values for the purposes of source code obfuscation. This flag must always be combined with \"--split-debug-info\" option, the mapping between the values and the original identifiers is stored in the symbol map created in the specified directory. For an app built with this flag, the \"flutter symbolize\" command with the right program symbol file is required to obtain a human readable stack trace.Because all identifiers are renamed, methods like Object.runtimeType, Type.toString, Enum.toString, Stacktrace.toString, Symbol.toString (for constant symbols or those generated by runtime system) will return obfuscated results. Any code or tests that rely on exact names will break." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios"
complete -c flutter -l dart-define -d "Additional key-value pairs that will be available as constants from the String.fromEnvironment, bool.fromEnvironment, int.fromEnvironment, and double.fromEnvironment constructors.Multiple defines can be passed by repeating \"--dart-define\" multiple times." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios"
complete -c flutter -l null-assertions -d "Perform additional null assertions on the boundaries of migrated and un-migrated code. This setting is not currently supported on desktop devices." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios"
complete -c flutter -l no-null-assertions -d "Perform additional null assertions on the boundaries of migrated and un-migrated code. This setting is not currently supported on desktop devices." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios"
complete -c flutter -l analyze-size -d "Whether to produce additional profile information for artifact output size. This flag is only supported on \"--release\" builds. When building for Android, a single ABI must be specified at a time with the \"--target-platform\" flag. When building for iOS, only the symbols from the arm64 architecture are used to analyze code size.This flag cannot be combined with \"--split-debug-info\"." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios"
complete -c flutter -l no-analyze-size -d "Whether to produce additional profile information for artifact output size. This flag is only supported on \"--release\" builds. When building for Android, a single ABI must be specified at a time with the \"--target-platform\" flag. When building for iOS, only the symbols from the arm64 architecture are used to analyze code size.This flag cannot be combined with \"--split-debug-info\"." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios"
complete -c flutter -l config-only -d "Update the project configuration without performing a build. This can be used in CI/CD process that create an archive to avoid performing duplicate work." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios"
complete -c flutter -l no-config-only -d "Update the project configuration without performing a build. This can be used in CI/CD process that create an archive to avoid performing duplicate work." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios"
complete -c flutter -l simulator -d "Build for the iOS simulator instead of the device. This changes the default build mode to debug if otherwise unspecified." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios"
complete -c flutter -l no-simulator -d "Build for the iOS simulator instead of the device. This changes the default build mode to debug if otherwise unspecified." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios"
complete -c flutter -l codesign -d "Codesign the application bundle (only available on device builds).(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios"
complete -c flutter -l no-codesign -d "Codesign the application bundle (only available on device builds).(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios"
complete -c flutter -f -n "__fish_seen_subcommand_from build; and not __fish_seen_subcommand_from $build_commands" -a ios-framework -d "Produces .xcframeworks for a Flutter project and its plugins for integration into existing, plain Xcode projects."
complete -c flutter -l help -d "Print this usage information." -s h -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios-framework"
complete -c flutter -l tree-shake-icons -d "Tree shake icon fonts so that only glyphs used by the application remain.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios-framework"
complete -c flutter -l no-tree-shake-icons -d "Tree shake icon fonts so that only glyphs used by the application remain.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios-framework"
complete -c flutter -l target -d "The main entry-point file of the application, as run on the device.If the \"--target\" option is omitted, but a file name is provided on the command line, then that is used instead.(defaults to \"lib/main.dart\")" -s t -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios-framework"
complete -c flutter -l flavor -d "Build a custom app flavor as defined by platform-specific build setup.Supports the use of product flavors in Android Gradle scripts, and the use of custom Xcode schemes." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios-framework"
complete -c flutter -l pub -d "Whether to run \"flutter pub get\" before executing this command.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios-framework"
complete -c flutter -l no-pub -d "Whether to run \"flutter pub get\" before executing this command.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios-framework"
complete -c flutter -l dart-define -d "Additional key-value pairs that will be available as constants from the String.fromEnvironment, bool.fromEnvironment, int.fromEnvironment, and double.fromEnvironment constructors.Multiple defines can be passed by repeating \"--dart-define\" multiple times." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios-framework"
complete -c flutter -l split-debug-info -d "In a release build, this flag reduces application size by storing Dart program symbols in a separate file on the host rather than in the application. The value of the flag should be a directory where program symbol files can be stored for later use. These symbol files contain the information needed to symbolize Dart stack traces. For an app built with this flag, the \"flutter symbolize\" command with the right program symbol file is required to obtain a human readable stack trace.This flag cannot be combined with \"--analyze-size\"." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios-framework"
complete -c flutter -l obfuscate -d "In a release build, this flag removes identifiers and replaces them with randomized values for the purposes of source code obfuscation. This flag must always be combined with \"--split-debug-info\" option, the mapping between the values and the original identifiers is stored in the symbol map created in the specified directory. For an app built with this flag, the \"flutter symbolize\" command with the right program symbol file is required to obtain a human readable stack trace.Because all identifiers are renamed, methods like Object.runtimeType, Type.toString, Enum.toString, Stacktrace.toString, Symbol.toString (for constant symbols or those generated by runtime system) will return obfuscated results. Any code or tests that rely on exact names will break." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios-framework"
complete -c flutter -l no-obfuscate -d "In a release build, this flag removes identifiers and replaces them with randomized values for the purposes of source code obfuscation. This flag must always be combined with \"--split-debug-info\" option, the mapping between the values and the original identifiers is stored in the symbol map created in the specified directory. For an app built with this flag, the \"flutter symbolize\" command with the right program symbol file is required to obtain a human readable stack trace.Because all identifiers are renamed, methods like Object.runtimeType, Type.toString, Enum.toString, Stacktrace.toString, Symbol.toString (for constant symbols or those generated by runtime system) will return obfuscated results. Any code or tests that rely on exact names will break." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios-framework"
complete -c flutter -l null-assertions -d "Perform additional null assertions on the boundaries of migrated and un-migrated code. This setting is not currently supported on desktop devices." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios-framework"
complete -c flutter -l no-null-assertions -d "Perform additional null assertions on the boundaries of migrated and un-migrated code. This setting is not currently supported on desktop devices." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios-framework"
complete -c flutter -l debug -d "Whether to produce a framework for the debug build configuration. By default, all build configurations are built.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios-framework"
complete -c flutter -l no-debug -d "Whether to produce a framework for the debug build configuration. By default, all build configurations are built.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios-framework"
complete -c flutter -l profile -d "Whether to produce a framework for the profile build configuration. By default, all build configurations are built.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios-framework"
complete -c flutter -l no-profile -d "Whether to produce a framework for the profile build configuration. By default, all build configurations are built.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios-framework"
complete -c flutter -l release -d "Whether to produce a framework for the release build configuration. By default, all build configurations are built.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios-framework"
complete -c flutter -l no-release -d "Whether to produce a framework for the release build configuration. By default, all build configurations are built.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios-framework"
complete -c flutter -l cocoapods -d "Produce a Flutter.podspec instead of an engine Flutter.xcframework (recommended if host app uses CocoaPods)." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios-framework"
complete -c flutter -l no-cocoapods -d "Produce a Flutter.podspec instead of an engine Flutter.xcframework (recommended if host app uses CocoaPods)." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios-framework"
complete -c flutter -l output -d "Location to write the frameworks." -s o -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ios-framework"
complete -c flutter -f -n "__fish_seen_subcommand_from build; and not __fish_seen_subcommand_from $build_commands" -a ipa -d "Build an iOS archive bundle (Mac OS X host only)."
complete -c flutter -l help -d "Print this usage information." -s h -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ipa"
complete -c flutter -l tree-shake-icons -d "Tree shake icon fonts so that only glyphs used by the application remain.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ipa"
complete -c flutter -l no-tree-shake-icons -d "Tree shake icon fonts so that only glyphs used by the application remain.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ipa"
complete -c flutter -l split-debug-info -d "In a release build, this flag reduces application size by storing Dart program symbols in a separate file on the host rather than in the application. The value of the flag should be a directory where program symbol files can be stored for later use. These symbol files contain the information needed to symbolize Dart stack traces. For an app built with this flag, the \"flutter symbolize\" command with the right program symbol file is required to obtain a human readable stack trace.This flag cannot be combined with \"--analyze-size\"." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ipa"
complete -c flutter -l debug -d "Build a debug version of your app." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ipa"
complete -c flutter -l profile -d "Build a version of your app specialized for performance profiling." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ipa"
complete -c flutter -l release -d "Build a release version of your app (default mode)." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ipa"
complete -c flutter -l target -d "The main entry-point file of the application, as run on the device.If the \"--target\" option is omitted, but a file name is provided on the command line, then that is used instead.(defaults to \"lib/main.dart\")" -s t -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ipa"
complete -c flutter -l flavor -d "Build a custom app flavor as defined by platform-specific build setup.Supports the use of product flavors in Android Gradle scripts, and the use of custom Xcode schemes." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ipa"
complete -c flutter -l pub -d "Whether to run \"flutter pub get\" before executing this command.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ipa"
complete -c flutter -l no-pub -d "Whether to run \"flutter pub get\" before executing this command.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ipa"
complete -c flutter -l build-number -d "An identifier used as an internal version number.Each build must have a unique identifier to differentiate it from previous builds.It is used to determine whether one build is more recent than another, with higher numbers indicating more recent build.On Android it is used as \"versionCode\".On Xcode builds it is used as \"CFBundleVersion\"." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ipa"
complete -c flutter -l build-name -d "A \"x.y.z\" string used as the version number shown to users.For each new version of your app, you will provide a version number to differentiate it from previous versions.On Android it is used as \"versionName\".On Xcode builds it is used as \"CFBundleShortVersionString\"." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ipa"
complete -c flutter -l obfuscate -d "In a release build, this flag removes identifiers and replaces them with randomized values for the purposes of source code obfuscation. This flag must always be combined with \"--split-debug-info\" option, the mapping between the values and the original identifiers is stored in the symbol map created in the specified directory. For an app built with this flag, the \"flutter symbolize\" command with the right program symbol file is required to obtain a human readable stack trace.Because all identifiers are renamed, methods like Object.runtimeType, Type.toString, Enum.toString, Stacktrace.toString, Symbol.toString (for constant symbols or those generated by runtime system) will return obfuscated results. Any code or tests that rely on exact names will break." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ipa"
complete -c flutter -l no-obfuscate -d "In a release build, this flag removes identifiers and replaces them with randomized values for the purposes of source code obfuscation. This flag must always be combined with \"--split-debug-info\" option, the mapping between the values and the original identifiers is stored in the symbol map created in the specified directory. For an app built with this flag, the \"flutter symbolize\" command with the right program symbol file is required to obtain a human readable stack trace.Because all identifiers are renamed, methods like Object.runtimeType, Type.toString, Enum.toString, Stacktrace.toString, Symbol.toString (for constant symbols or those generated by runtime system) will return obfuscated results. Any code or tests that rely on exact names will break." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ipa"
complete -c flutter -l dart-define -d "Additional key-value pairs that will be available as constants from the String.fromEnvironment, bool.fromEnvironment, int.fromEnvironment, and double.fromEnvironment constructors.Multiple defines can be passed by repeating \"--dart-define\" multiple times." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ipa"
complete -c flutter -l null-assertions -d "Perform additional null assertions on the boundaries of migrated and un-migrated code. This setting is not currently supported on desktop devices." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ipa"
complete -c flutter -l no-null-assertions -d "Perform additional null assertions on the boundaries of migrated and un-migrated code. This setting is not currently supported on desktop devices." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ipa"
complete -c flutter -l analyze-size -d "Whether to produce additional profile information for artifact output size. This flag is only supported on \"--release\" builds. When building for Android, a single ABI must be specified at a time with the \"--target-platform\" flag. When building for iOS, only the symbols from the arm64 architecture are used to analyze code size.This flag cannot be combined with \"--split-debug-info\"." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ipa"
complete -c flutter -l no-analyze-size -d "Whether to produce additional profile information for artifact output size. This flag is only supported on \"--release\" builds. When building for Android, a single ABI must be specified at a time with the \"--target-platform\" flag. When building for iOS, only the symbols from the arm64 architecture are used to analyze code size.This flag cannot be combined with \"--split-debug-info\"." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ipa"
complete -c flutter -l export-options-plist -d "Optionally export an IPA with these options. See \"xcodebuild -h\" for available exportOptionsPlist keys." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from ipa"
complete -c flutter -f -n "__fish_seen_subcommand_from build; and not __fish_seen_subcommand_from $build_commands" -a web -d "Build a web application bundle."
complete -c flutter -l help -d "Print this usage information." -s h -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from web"
complete -c flutter -l tree-shake-icons -d "Tree shake icon fonts so that only glyphs used by the application remain." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from web"
complete -c flutter -l no-tree-shake-icons -d "Tree shake icon fonts so that only glyphs used by the application remain." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from web"
complete -c flutter -l target -d "The main entry-point file of the application, as run on the device.If the \"--target\" option is omitted, but a file name is provided on the command line, then that is used instead.(defaults to \"lib/main.dart\")" -s t -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from web"
complete -c flutter -l pub -d "Whether to run \"flutter pub get\" before executing this command.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from web"
complete -c flutter -l no-pub -d "Whether to run \"flutter pub get\" before executing this command.(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from web"
complete -c flutter -l profile -d "Build a version of your app specialized for performance profiling." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from web"
complete -c flutter -l release -d "Build a release version of your app (default mode)." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from web"
complete -c flutter -l dart-define -d "Additional key-value pairs that will be available as constants from the String.fromEnvironment, bool.fromEnvironment, int.fromEnvironment, and double.fromEnvironment constructors.Multiple defines can be passed by repeating \"--dart-define\" multiple times." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from web"
complete -c flutter -l web-renderer -d "The renderer implementation to use when building for the web.[auto] (default)             Use the HTML renderer on mobile devices, and CanvasKit on desktop devices.[canvaskit]                  Always use the CanvasKit renderer. This renderer uses WebGL and WebAssembly to render graphics.[html]                       Always use the HTML renderer. This renderer uses a combination of HTML, CSS, SVG, 2D Canvas, and WebGL. This is the default." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from web"
complete -c flutter -l null-assertions -d "Perform additional null assertions on the boundaries of migrated and un-migrated code. This setting is not currently supported on desktop devices." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from web"
complete -c flutter -l no-null-assertions -d "Perform additional null assertions on the boundaries of migrated and un-migrated code. This setting is not currently supported on desktop devices." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from web"
complete -c flutter -l native-null-assertions -d "Enables additional runtime null checks in web applications to ensure the correct nullability of native (such as in dart:html) and external (such as with JS interop) types. This is enabled by default but only takes effect in sound mode. To report an issue with a null assertion failure in dart:html or the other dart web libraries, please file a bug at: https://github.com/dart-lang/sdk/issues/labels/web-libraries(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from web"
complete -c flutter -l no-native-null-assertions -d "Enables additional runtime null checks in web applications to ensure the correct nullability of native (such as in dart:html) and external (such as with JS interop) types. This is enabled by default but only takes effect in sound mode. To report an issue with a null assertion failure in dart:html or the other dart web libraries, please file a bug at: https://github.com/dart-lang/sdk/issues/labels/web-libraries(defaults to on)" -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from web"
complete -c flutter -l csp -d "Disable dynamic generation of code in the generated output. This is necessary to satisfy CSP restrictions (see http://www.w3.org/TR/CSP/)." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from web"
complete -c flutter -l source-maps -d "Generate a sourcemap file. These can be used by browsers to view and debug the original source code of a compiled and minified Dart application." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from web"
complete -c flutter -l no-source-maps -d "Generate a sourcemap file. These can be used by browsers to view and debug the original source code of a compiled and minified Dart application." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from web"
complete -c flutter -l pwa-strategy -d "The caching strategy to be used by the PWA service worker.[none]                       Generate a service worker with no body. This is useful for local testing or in cases where the service worker caching functionality is not desirable[offline-first] (default)    Attempt to cache the application shell eagerly and then lazily cache all subsequent assets as they are loaded. When making a network request for an asset, the offline cache will be preferred." -n "__fish_seen_subcommand_from build;__fish_seen_subcommand_from web"
complete -c flutter -f -n "not __fish_seen_subcommand_from $commands" -a channel -d "List or switch Flutter channels."
complete -c flutter -l help -d "Print this usage information." -s h -n "__fish_seen_subcommand_from channel"
complete -c flutter -f -n "not __fish_seen_subcommand_from $commands" -a clean -d "Delete the build/ and .dart_tool/ directories."
complete -c flutter -l help -d "Print this usage information." -s h -n "__fish_seen_subcommand_from clean"
complete -c flutter -f -n "not __fish_seen_subcommand_from $commands" -a config -d "Configure Flutter settings."
complete -c flutter -l help -d "Print this usage information." -s h -n "__fish_seen_subcommand_from config"
complete -c flutter -l analytics -d "Enable or disable reporting anonymously tool usage statistics and crash reports." -n "__fish_seen_subcommand_from config"
complete -c flutter -l no-analytics -d "Enable or disable reporting anonymously tool usage statistics and crash reports." -n "__fish_seen_subcommand_from config"
complete -c flutter -l clear-ios-signing-cert -d "Clear the saved development certificate choice used to sign apps for iOS device deployment." -n "__fish_seen_subcommand_from config"
complete -c flutter -l android-sdk -d "The Android SDK directory." -n "__fish_seen_subcommand_from config"
complete -c flutter -l android-studio-dir -d "The Android Studio install directory." -n "__fish_seen_subcommand_from config"
complete -c flutter -l build-dir -d "The relative path to override a projects build directory." -n "__fish_seen_subcommand_from config"
complete -c flutter -l enable-web -d "Enable or disable Flutter for web. This setting will take effect on the master, dev, beta, and stable channels." -n "__fish_seen_subcommand_from config"
complete -c flutter -l no-enable-web -d "Enable or disable Flutter for web. This setting will take effect on the master, dev, beta, and stable channels." -n "__fish_seen_subcommand_from config"
complete -c flutter -l enable-linux-desktop -d "Enable or disable beta-quality support for desktop on Linux. This setting will take effect on the master, dev, beta, and stable channels. Newer beta versions are available on the beta channel." -n "__fish_seen_subcommand_from config"
complete -c flutter -l no-enable-linux-desktop -d "Enable or disable beta-quality support for desktop on Linux. This setting will take effect on the master, dev, beta, and stable channels. Newer beta versions are available on the beta channel." -n "__fish_seen_subcommand_from config"
complete -c flutter -l enable-macos-desktop -d "Enable or disable beta-quality support for desktop on macOS. This setting will take effect on the master, dev, beta, and stable channels. Newer beta versions are available on the beta channel." -n "__fish_seen_subcommand_from config"
complete -c flutter -l no-enable-macos-desktop -d "Enable or disable beta-quality support for desktop on macOS. This setting will take effect on the master, dev, beta, and stable channels. Newer beta versions are available on the beta channel." -n "__fish_seen_subcommand_from config"
complete -c flutter -l enable-windows-desktop -d "Enable or disable beta-quality support for desktop on Windows. This setting will take effect on the master, dev, beta, and stable channels. Newer beta versions are available on the beta channel." -n "__fish_seen_subcommand_from config"
complete -c flutter -l no-enable-windows-desktop -d "Enable or disable beta-quality support for desktop on Windows. This setting will take effect on the master, dev, beta, and stable channels. Newer beta versions are available on the beta channel." -n "__fish_seen_subcommand_from config"
complete -c flutter -l enable-windows-uwp-desktop -d "Enable or disable Flutter for Windows UWP. This setting will take effect on the master channel." -n "__fish_seen_subcommand_from config"
complete -c flutter -l no-enable-windows-uwp-desktop -d "Enable or disable Flutter for Windows UWP. This setting will take effect on the master channel." -n "__fish_seen_subcommand_from config"
complete -c flutter -l single-widget-reload-optimization -d "Enable or disable Hot reload optimization for changes to class body of a single widget. This setting will take effect on the master, dev, and beta channels." -n "__fish_seen_subcommand_from config"
complete -c flutter -l no-single-widget-reload-optimization -d "Enable or disable Hot reload optimization for changes to class body of a single widget. This setting will take effect on the master, dev, and beta channels." -n "__fish_seen_subcommand_from config"
complete -c flutter -l enable-android -d "Enable or disable Flutter for Android. This setting will take effect on the master, dev, beta, and stable channels." -n "__fish_seen_subcommand_from config"
complete -c flutter -l no-enable-android -d "Enable or disable Flutter for Android. This setting will take effect on the master, dev, beta, and stable channels." -n "__fish_seen_subcommand_from config"
complete -c flutter -l enable-ios -d "Enable or disable Flutter for iOS. This setting will take effect on the master, dev, beta, and stable channels." -n "__fish_seen_subcommand_from config"
complete -c flutter -l no-enable-ios -d "Enable or disable Flutter for iOS. This setting will take effect on the master, dev, beta, and stable channels." -n "__fish_seen_subcommand_from config"
complete -c flutter -l enable-fuchsia -d "Enable or disable Flutter for Fuchsia. This setting will take effect on the master channel." -n "__fish_seen_subcommand_from config"
complete -c flutter -l no-enable-fuchsia -d "Enable or disable Flutter for Fuchsia. This setting will take effect on the master channel." -n "__fish_seen_subcommand_from config"
complete -c flutter -l enable-custom-devices -d "Enable or disable Early support for custom device types. This setting will take effect on the master and dev channels." -n "__fish_seen_subcommand_from config"
complete -c flutter -l no-enable-custom-devices -d "Enable or disable Early support for custom device types. This setting will take effect on the master and dev channels." -n "__fish_seen_subcommand_from config"
complete -c flutter -l experimental-invalidation-strategy -d "Enable or disable Hot reload optimization that reduces incremental artifact size. This setting will take effect on the master, dev, beta, and stable channels." -n "__fish_seen_subcommand_from config"
complete -c flutter -l no-experimental-invalidation-strategy -d "Enable or disable Hot reload optimization that reduces incremental artifact size. This setting will take effect on the master, dev, beta, and stable channels." -n "__fish_seen_subcommand_from config"
complete -c flutter -l clear-features -d "Remove all configured features and restore them to the default values.No settings have been configured." -n "__fish_seen_subcommand_from config"
complete -c flutter -f -n "not __fish_seen_subcommand_from $commands" -a create -d "Create a new Flutter project."
complete -c flutter -l help -d "Print this usage information." -s h -n "__fish_seen_subcommand_from create"
complete -c flutter -l pub -d "Whether to run \"flutter pub get\" after the project has been created.(defaults to on)" -n "__fish_seen_subcommand_from create"
complete -c flutter -l no-pub -d "Whether to run \"flutter pub get\" after the project has been created.(defaults to on)" -n "__fish_seen_subcommand_from create"
complete -c flutter -l offline -d "When \"flutter pub get\" is run by the create command, this indicates whether to run it in offline mode or not. In offline mode, it will need to have all dependencies already available in the pub cache to succeed." -n "__fish_seen_subcommand_from create"
complete -c flutter -l no-offline -d "When \"flutter pub get\" is run by the create command, this indicates whether to run it in offline mode or not. In offline mode, it will need to have all dependencies already available in the pub cache to succeed." -n "__fish_seen_subcommand_from create"
complete -c flutter -l overwrite -d "When performing operations, overwrite existing files." -n "__fish_seen_subcommand_from create"
complete -c flutter -l no-overwrite -d "When performing operations, overwrite existing files." -n "__fish_seen_subcommand_from create"
complete -c flutter -l description -d "The description to use for your new Flutter project. This string ends up in the pubspec.yaml file.(defaults to \"A new Flutter project.\")" -n "__fish_seen_subcommand_from create"
complete -c flutter -l org -d "The organization responsible for your new Flutter project, in reverse domain name notation. This string is used in Java package names and as prefix in the iOS bundle identifier.(defaults to \"com.example\")" -n "__fish_seen_subcommand_from create"
complete -c flutter -l project-name -d "The project name for this new Flutter project. This must be a valid dart package name." -n "__fish_seen_subcommand_from create"
complete -c flutter -l ios-language -d "The language to use for iOS-specific code, either ObjectiveC (legacy) or Swift (recommended).[objc, swift (default)]" -s i -n "__fish_seen_subcommand_from create"
complete -c flutter -l android-language -d "The language to use for Android-specific code, either Java (legacy) or Kotlin (recommended).[java, kotlin (default)]" -s a -n "__fish_seen_subcommand_from create"
complete -c flutter -l platforms -d "The platforms supported by this project. Platform folders (e.g. android/) will be generated in the target project. This argument only works when \"--template\" is set to app or plugin. When adding platforms to a plugin project, the pubspec.yaml will be updated with the requested platform. Adding desktop platforms requires the corresponding desktop config setting to be enabled.[ios (default), android (default), windows (default), linux (default), macos (default), web (default)]" -n "__fish_seen_subcommand_from create"
complete -c flutter -l template -d "Specify the type of project to create.[app]              (default) Generate a Flutter application.[module]           Generate a project to add a Flutter module to an existing Android or iOS application.[package]          Generate a shareable Flutter project containing only Dart code.[plugin]           Generate a shareable Flutter project containing an API in Dart code with a platform-specific implementation for Android, for iOS code, or for both." -s t -n "__fish_seen_subcommand_from create"
complete -c flutter -l sample -d "Specifies the Flutter code sample to use as the \"main.dart\" for an application. Implies \"--template=app\". The value should be the sample ID of the desired sample from the API documentation website (http://docs.flutter.dev/). An example can be found at: https://api.flutter.dev/flutter/widgets/SingleChildScrollView-class.html" -s s -n "__fish_seen_subcommand_from create"
complete -c flutter -l list-samples -d "Specifies a JSON output file for a listing of Flutter code samples that can be created with \"--sample\"." -n "__fish_seen_subcommand_from create"
complete -c flutter -f -n "not __fish_seen_subcommand_from $commands" -a devices -d "List all connected devices."
complete -c flutter -l help -d "Print this usage information." -s h -n "__fish_seen_subcommand_from devices"
complete -c flutter -l machine -d "Output device information in machine readable structured JSON format." -n "__fish_seen_subcommand_from devices"
complete -c flutter -l device-timeout -d "Time in seconds to wait for devices to attach. Longer timeouts may be necessary for networked devices." -n "__fish_seen_subcommand_from devices"
complete -c flutter -f -n "not __fish_seen_subcommand_from $commands" -a doctor -d "Show information about the installed tooling."
complete -c flutter -l help -d "Print this usage information." -s h -n "__fish_seen_subcommand_from doctor"
complete -c flutter -l android-licenses -d "Run the Android SDK manager tool to accept the SDK's licenses." -n "__fish_seen_subcommand_from doctor"
complete -c flutter -f -n "not __fish_seen_subcommand_from $commands" -a downgrade -d "Downgrade Flutter to the last active version for the current channel."
complete -c flutter -l help -d "Print this usage information." -s h -n "__fish_seen_subcommand_from downgrade"
complete -c flutter -f -n "not __fish_seen_subcommand_from $commands" -a drive -d "Run integration tests for the project on an attached device or emulator."
complete -c flutter -l help -d "Print this usage information." -s h -n "__fish_seen_subcommand_from drive"
complete -c flutter -l debug -d "Build a debug version of your app (default mode)." -n "__fish_seen_subcommand_from drive"
complete -c flutter -l profile -d "Build a version of your app specialized for performance profiling." -n "__fish_seen_subcommand_from drive"
complete -c flutter -l release -d "Build a release version of your app." -n "__fish_seen_subcommand_from drive"
complete -c flutter -l dart-define -d "Additional key-value pairs that will be available as constants from the String.fromEnvironment, bool.fromEnvironment, int.fromEnvironment, and double.fromEnvironment constructors.Multiple defines can be passed by repeating \"--dart-define\" multiple times." -n "__fish_seen_subcommand_from drive"
complete -c flutter -l flavor -d "Build a custom app flavor as defined by platform-specific build setup.Supports the use of product flavors in Android Gradle scripts, and the use of custom Xcode schemes." -n "__fish_seen_subcommand_from drive"
complete -c flutter -l web-renderer -d "The renderer implementation to use when building for the web.[auto] (default)                        Use the HTML renderer on mobile devices, and CanvasKit on desktop devices.[canvaskit]                             Always use the CanvasKit renderer. This renderer uses WebGL and WebAssembly to render graphics.[html]                                  Always use the HTML renderer. This renderer uses a combination of HTML, CSS, SVG, 2D Canvas, and WebGL. This is the default." -n "__fish_seen_subcommand_from drive"
complete -c flutter -l trace-startup -d "Trace application startup, then exit, saving the trace to a file. By default, this will be saved in the \"build\" directory. If the FLUTTER_TEST_OUTPUTS_DIR environment variable is set, the file will be written there instead." -n "__fish_seen_subcommand_from drive"
complete -c flutter -l verbose-system-logs -d "Include verbose logging from the Flutter engine." -n "__fish_seen_subcommand_from drive"
complete -c flutter -l cache-sksl -d "Cache the shader in the SkSL format instead of in binary or GLSL formats." -n "__fish_seen_subcommand_from drive"
complete -c flutter -l dump-skp-on-shader-compilation -d "Automatically dump the skp that triggers new shader compilations. This is useful for writing custom ShaderWarmUp to reduce jank. By default, this is not enabled as it introduces significant overhead. This is only available in profile or debug builds." -n "__fish_seen_subcommand_from drive"
complete -c flutter -l purge-persistent-cache -d "Removes all existing persistent caches. This allows reproducing shader compilation jank that normally only happens the first time an app is run, or for reliable testing of compilation jank fixes (e.g. shader warm-up)." -n "__fish_seen_subcommand_from drive"
complete -c flutter -l route -d "Which route to load when running the app." -n "__fish_seen_subcommand_from drive"
complete -c flutter -l use-application-binary -d "Specify a pre-built application binary to use when running. For Android applications, this must be the path to an APK. For iOS applications, the path to an IPA. Other device types do not yet support prebuilt application binaries." -n "__fish_seen_subcommand_from drive"
complete -c flutter -l start-paused -d "Start in a paused mode and wait for a debugger to connect.(defaults to on)" -n "__fish_seen_subcommand_from drive"
complete -c flutter -l no-start-paused -d "Start in a paused mode and wait for a debugger to connect.(defaults to on)" -n "__fish_seen_subcommand_from drive"
complete -c flutter -l endless-trace-buffer -d "Enable tracing to an infinite buffer, instead of a ring buffer. This is useful when recording large traces. To use an endless buffer to record startup traces, combine this with \"--trace-startup\"." -n "__fish_seen_subcommand_from drive"
complete -c flutter -l trace-systrace -d "Enable tracing to the system tracer. This is only useful on platforms where such a tracer is available (Android and Fuchsia)." -n "__fish_seen_subcommand_from drive"
complete -c flutter -l trace-skia -d "Enable tracing of Skia code. This is useful when debugging the raster thread (formerly known as the GPU thread). By default, Flutter will not log Skia code, as it introduces significant overhead that may affect recorded performance metrics in a misleading way." -n "__fish_seen_subcommand_from drive"
complete -c flutter -l dart-entrypoint-args -d "Pass a list of arguments to the Dart entrypoint at application startup. By default this is main(List<String> args). Specify this option multiple times each with one argument to pass multiple arguments to the Dart entrypoint. Currently this is only supported on desktop platforms." -s a -n "__fish_seen_subcommand_from drive"
complete -c flutter -l target -d "The main entry-point file of the application, as run on the device.If the \"--target\" option is omitted, but a file name is provided on the command line, then that is used instead.(defaults to \"lib/main.dart\")" -s t -n "__fish_seen_subcommand_from drive"
complete -c flutter -l device-vmservice-port -d "Look for vmservice connections only from the specified port.Specifying port 0 (the default) will accept the first vmservice discovered." -n "__fish_seen_subcommand_from drive"
complete -c flutter -l host-vmservice-port -d "When a device-side vmservice port is forwarded to a host-side port, use this value as the host port.Specifying port 0 (the default) will find a random free host port." -n "__fish_seen_subcommand_from drive"
complete -c flutter -l pub -d "Whether to run \"flutter pub get\" before executing this command.(defaults to on)" -n "__fish_seen_subcommand_from drive"
complete -c flutter -l no-pub -d "Whether to run \"flutter pub get\" before executing this command.(defaults to on)" -n "__fish_seen_subcommand_from drive"
complete -c flutter -l track-widget-creation -d "Track widget creation locations. This enables features such as the widget inspector. This parameter is only functional in debug mode (i.e. when compiling JIT, not AOT).(defaults to on)" -n "__fish_seen_subcommand_from drive"
complete -c flutter -l no-track-widget-creation -d "Track widget creation locations. This enables features such as the widget inspector. This parameter is only functional in debug mode (i.e. when compiling JIT, not AOT).(defaults to on)" -n "__fish_seen_subcommand_from drive"
complete -c flutter -l null-assertions -d "Perform additional null assertions on the boundaries of migrated and un-migrated code. This setting is not currently supported on desktop devices." -n "__fish_seen_subcommand_from drive"
complete -c flutter -l no-null-assertions -d "Perform additional null assertions on the boundaries of migrated and un-migrated code. This setting is not currently supported on desktop devices." -n "__fish_seen_subcommand_from drive"
complete -c flutter -l device-user -d "Identifier number for a user or work profile on Android only. Run \"adb shell pm list users\" for available identifiers." -n "__fish_seen_subcommand_from drive"
complete -c flutter -l device-timeout -d "Time in seconds to wait for devices to attach. Longer timeouts may be necessary for networked devices." -n "__fish_seen_subcommand_from drive"
complete -c flutter -l dds-port -d "When this value is provided, the Dart Development Service (DDS) will be bound to the provided port.Specifying port 0 (the default) will find a random free port." -n "__fish_seen_subcommand_from drive"
complete -c flutter -l keep-app-running -d "Will keep the Flutter application running when done testing.By default, \"flutter drive\" stops the application after tests are finished, and \"--keep-app-running\" overrides this. On the other hand, if \"--use-existing-app\" is specified, then \"flutter drive\" instead defaults to leaving the application running, and \"--no-keep-app-running\" overrides it." -n "__fish_seen_subcommand_from drive"
complete -c flutter -l no-keep-app-running -d "Will keep the Flutter application running when done testing.By default, \"flutter drive\" stops the application after tests are finished, and \"--keep-app-running\" overrides this. On the other hand, if \"--use-existing-app\" is specified, then \"flutter drive\" instead defaults to leaving the application running, and \"--no-keep-app-running\" overrides it." -n "__fish_seen_subcommand_from drive"
complete -c flutter -l use-existing-app -d "Connect to an already running instance via the given observatory URL. If this option is given, the application will not be automatically started, and it will only be stopped if \"--no-keep-app-running\" is explicitly set." -n "__fish_seen_subcommand_from drive"
complete -c flutter -l driver -d "The test file to run on the host (as opposed to the target file to run on the device).By default, this file has the same base name as the target file, but in the \"test_driver/\" directory instead, and with \"_test\" inserted just before the extension, so e.g. if the target is \"lib/main.dart\", the driver will be \"test_driver/main_test.dart\"." -n "__fish_seen_subcommand_from drive"
complete -c flutter -l build -d "(deprecated) Build the app before running. To use an existing app, pass the \"--use-application-binary\" flag with an existing APK.(defaults to on)" -n "__fish_seen_subcommand_from drive"
complete -c flutter -l no-build -d "(deprecated) Build the app before running. To use an existing app, pass the \"--use-application-binary\" flag with an existing APK.(defaults to on)" -n "__fish_seen_subcommand_from drive"
complete -c flutter -l screenshot -d "Directory location to write screenshots on test failure." -n "__fish_seen_subcommand_from drive"
complete -c flutter -l driver-port -d "The port where Webdriver server is launched at.(defaults to \"4444\")" -n "__fish_seen_subcommand_from drive"
complete -c flutter -l headless -d "Whether the driver browser is going to be launched in headless mode.(defaults to on)" -n "__fish_seen_subcommand_from drive"
complete -c flutter -l no-headless -d "Whether the driver browser is going to be launched in headless mode.(defaults to on)" -n "__fish_seen_subcommand_from drive"
complete -c flutter -l browser-name -d "Name of the browser where tests will be executed.[android-chrome]                        Chrome on Android (see also \"--android-emulator\").[chrome] (default)                      Google Chrome on this computer (see also \"--chrome-binary\").[edge]                                  Microsoft Edge on this computer (Windows only).[firefox]                               Mozilla Firefox on this computer.[ios-safari]                            Apple Safari on an iOS device.[safari]                                Apple Safari on this computer (macOS only)." -n "__fish_seen_subcommand_from drive"
complete -c flutter -l browser-dimension -d "The dimension of the browser when running a Flutter Web test. This will affect screenshot and all offset-related actions.(defaults to \"1600,1024\")" -n "__fish_seen_subcommand_from drive"
complete -c flutter -l android-emulator -d "Whether to perform Flutter Driver testing using an Android Emulator. Works only if \"browser-name\" is set to \"android-chrome\".(defaults to on)" -n "__fish_seen_subcommand_from drive"
complete -c flutter -l no-android-emulator -d "Whether to perform Flutter Driver testing using an Android Emulator. Works only if \"browser-name\" is set to \"android-chrome\".(defaults to on)" -n "__fish_seen_subcommand_from drive"
complete -c flutter -l chrome-binary -d "Location of the Chrome binary. Works only if \"browser-name\" is set to \"chrome\"." -n "__fish_seen_subcommand_from drive"
complete -c flutter -l write-sksl-on-exit -d "Attempts to write an SkSL file when the drive process is finished to the provided file, overwriting it if necessary." -n "__fish_seen_subcommand_from drive"
complete -c flutter -l test-arguments -d "Additional arguments to pass to the Dart VM running The test script." -n "__fish_seen_subcommand_from drive"
complete -c flutter -f -n "not __fish_seen_subcommand_from $commands" -a emulators -d "List, launch and create emulators."
complete -c flutter -l help -d "Print this usage information." -s h -n "__fish_seen_subcommand_from emulators"
complete -c flutter -l launch -d "The full or partial ID of the emulator to launch." -n "__fish_seen_subcommand_from emulators" -xa "(__fish_flutter_emulators)"
complete -c flutter -l create -d "Creates a new Android emulator based on a Pixel device." -n "__fish_seen_subcommand_from emulators"
complete -c flutter -l name -d "Used with the \"--create\" flag. Specifies a name for the emulator being created." -n "__fish_seen_subcommand_from emulators"
complete -c flutter -f -n "not __fish_seen_subcommand_from $commands" -a format -d "Format one or more Dart files."
complete -c flutter -l help -d "Print this usage information." -s h -n "__fish_seen_subcommand_from format"
complete -c flutter -l dry-run -d "Show which files would be modified but make no changes." -s n -n "__fish_seen_subcommand_from format"
complete -c flutter -l set-exit-if-changed -d "Return exit code 1 if there are any formatting changes." -n "__fish_seen_subcommand_from format"
complete -c flutter -l machine -d "Produce machine-readable JSON output." -s m -n "__fish_seen_subcommand_from format"
complete -c flutter -l line-length -d "Wrap lines longer than this length.(defaults to \"80\")" -s l -n "__fish_seen_subcommand_from format"
complete -c flutter -f -n "not __fish_seen_subcommand_from $commands" -a gen-l10n -d "Generate localizations for the current project."
complete -c flutter -l help -d "Print this usage information." -s h -n "__fish_seen_subcommand_from gen-l10n"
complete -c flutter -l arb-dir -d "The directory where the template and translated arb files are located.(defaults to \"lib/l10n\")" -n "__fish_seen_subcommand_from gen-l10n"
complete -c flutter -l output-dir -d "The directory where the generated localization classes will be written if the synthetic-package flag is set to false.If output-dir is specified and the synthetic-package flag is enabled, this option will be ignored by the tool.The app must import the file specified in the \"--output-localization-file\" option from this directory. If unspecified, this defaults to the same directory as the input directory specified in \"--arb-dir\"." -n "__fish_seen_subcommand_from gen-l10n"
complete -c flutter -l template-arb-file -d "The template arb file that will be used as the basis for generating the Dart localization and messages files.(defaults to \"app_en.arb\")" -n "__fish_seen_subcommand_from gen-l10n"
complete -c flutter -l output-localization-file -d "The filename for the output localization and localizations delegate classes.(defaults to \"app_localizations.dart\")\"locale\": [\"message_1\", \"message_2\" ... \"message_n\"]If this option is not specified, a summary of the messages that have not been translated will be printed on the command line." -n "__fish_seen_subcommand_from gen-l10n"
complete -c flutter -l output-class -d "The Dart class name to use for the output localization and localizations delegate classes.(defaults to \"AppLocalizations\")" -n "__fish_seen_subcommand_from gen-l10n"
complete -c flutter -l preferred-supported-locales -d "The list of preferred supported locales for the application. By default, the tool will generate the supported locales list in alphabetical order. Use this flag if you would like to default to a different locale. For example, pass in \"en_US\" if you would like your app to default to American English on devices that support it. Pass this option multiple times to define multiple items." -n "__fish_seen_subcommand_from gen-l10n"
complete -c flutter -l header -d "The header to prepend to the generated Dart localizations files. This option takes in a string.For example, pass in \"/// All localized files.\" if you would like this string prepended to the generated Dart file.Alternatively, see the \"--header-file\" option to pass in a text file for longer headers." -n "__fish_seen_subcommand_from gen-l10n"
complete -c flutter -l header-file -d "The header to prepend to the generated Dart localizations files. The value of this option is the name of the file that contains the header text which will be inserted at the top of each generated Dart file.Alternatively, see the \"--header\" option to pass in a string for a simpler header.This file should be placed in the directory specified in \"--arb-dir\"." -n "__fish_seen_subcommand_from gen-l10n"
complete -c flutter -l use-deferred-loading -d "Whether to generate the Dart localization file with locales imported as deferred, allowing for lazy loading of each locale in Flutter web.This can reduce a web app’s initial startup time by decreasing the size of the JavaScript bundle. When this flag is set to true, the messages for a particular locale are only downloaded and loaded by the Flutter app as they are needed. For projects with a lot of different locales and many localization strings, it can be an performance improvement to have deferred loading. For projects with a small number of locales, the difference is negligible, and might slow down the start up compared to bundling the localizations with the rest of the application.This flag does not affect other platforms such as mobile or desktop." -n "__fish_seen_subcommand_from gen-l10n"
complete -c flutter -l no-use-deferred-loading -d "Whether to generate the Dart localization file with locales imported as deferred, allowing for lazy loading of each locale in Flutter web.This can reduce a web app’s initial startup time by decreasing the size of the JavaScript bundle. When this flag is set to true, the messages for a particular locale are only downloaded and loaded by the Flutter app as they are needed. For projects with a lot of different locales and many localization strings, it can be an performance improvement to have deferred loading. For projects with a small number of locales, the difference is negligible, and might slow down the start up compared to bundling the localizations with the rest of the application.This flag does not affect other platforms such as mobile or desktop." -n "__fish_seen_subcommand_from gen-l10n"
complete -c flutter -l gen-inputs-and-outputs-list -d "When specified, the tool generates a JSON file containing the tool's inputs and outputs named gen_l10n_inputs_and_outputs.json.This can be useful for keeping track of which files of the Flutter project were used when generating the latest set of localizations. For example, the Flutter tool's build system uses this file to keep track of when to call gen_l10n during hot reload.The value of this option is the directory where the JSON file will be generated.When null, the JSON file will not be generated." -n "__fish_seen_subcommand_from gen-l10n"
complete -c flutter -l synthetic-package -d "Determines whether or not the generated output files will be generated as a synthetic package or at a specified directory in the Flutter project.This flag is set to true by default.When synthetic-package is set to false, it will generate the localizations files in the directory specified by arb-dir by default.If output-dir is specified, files will be generated there.(defaults to on)" -n "__fish_seen_subcommand_from gen-l10n"
complete -c flutter -l no-synthetic-package -d "Determines whether or not the generated output files will be generated as a synthetic package or at a specified directory in the Flutter project.This flag is set to true by default.When synthetic-package is set to false, it will generate the localizations files in the directory specified by arb-dir by default.If output-dir is specified, files will be generated there.(defaults to on)" -n "__fish_seen_subcommand_from gen-l10n"
complete -c flutter -l project-dir -d "When specified, the tool uses the path passed into this option as the directory of the root Flutter project.When null, the relative path to the present working directory will be used." -n "__fish_seen_subcommand_from gen-l10n"
complete -c flutter -l required-resource-attributes -d "Requires all resource ids to contain a corresponding resource attribute.By default, simple messages will not require metadata, but it is highly recommended as this provides context for the meaning of a message to readers.Resource attributes are still required for plural messages." -n "__fish_seen_subcommand_from gen-l10n"
complete -c flutter -l no-required-resource-attributes -d "Requires all resource ids to contain a corresponding resource attribute.By default, simple messages will not require metadata, but it is highly recommended as this provides context for the meaning of a message to readers.Resource attributes are still required for plural messages." -n "__fish_seen_subcommand_from gen-l10n"
complete -c flutter -l nullable-getter -d "Whether or not the localizations class getter is nullable.By default, this value is set to true so that Localizations.of(context) returns a nullable value for backwards compatibility. If this value is set to true, then a null check is performed on the returned value of Localizations.of(context), removing the need for null checking in user code." -n "__fish_seen_subcommand_from gen-l10n"
complete -c flutter -l no-nullable-getter -d "Whether or not the localizations class getter is nullable.By default, this value is set to true so that Localizations.of(context) returns a nullable value for backwards compatibility. If this value is set to true, then a null check is performed on the returned value of Localizations.of(context), removing the need for null checking in user code." -n "__fish_seen_subcommand_from gen-l10n"
complete -c flutter -f -n "not __fish_seen_subcommand_from $commands" -a install -d "Install a Flutter app on an attached device."
complete -c flutter -l help -d "Print this usage information." -s h -n "__fish_seen_subcommand_from install"
complete -c flutter -l device-user -d "Identifier number for a user or work profile on Android only. Run \"adb shell pm list users\" for available identifiers." -n "__fish_seen_subcommand_from install"
complete -c flutter -l device-timeout -d "Time in seconds to wait for devices to attach. Longer timeouts may be necessary for networked devices." -n "__fish_seen_subcommand_from install"
complete -c flutter -l uninstall-only -d "Uninstall the app if already on the device. Skip install." -n "__fish_seen_subcommand_from install"
complete -c flutter -l no-uninstall-only -d "Uninstall the app if already on the device. Skip install." -n "__fish_seen_subcommand_from install"
complete -c flutter -f -n "not __fish_seen_subcommand_from $commands" -a logs -d "Show log output for running Flutter apps."
complete -c flutter -l help -d "Print this usage information." -s h -n "__fish_seen_subcommand_from logs"
complete -c flutter -l clear -d "Clear log history before reading from logs." -s c -n "__fish_seen_subcommand_from logs"
complete -c flutter -l device-timeout -d "Time in seconds to wait for devices to attach. Longer timeouts may be necessary for networked devices." -n "__fish_seen_subcommand_from logs"
complete -c flutter -f -n "not __fish_seen_subcommand_from $commands" -a precache -d "Populate the Flutter tool's cache of binary artifacts."
complete -c flutter -l help -d "Print this usage information." -s h -n "__fish_seen_subcommand_from precache"
complete -c flutter -l all-platforms -d "Precache artifacts for all host platforms." -s a -n "__fish_seen_subcommand_from precache"
complete -c flutter -l force -d "Force re-downloading of artifacts." -s f -n "__fish_seen_subcommand_from precache"
complete -c flutter -l ios -d "Precache artifacts for iOS development." -n "__fish_seen_subcommand_from precache"
complete -c flutter -l no-ios -d "Precache artifacts for iOS development." -n "__fish_seen_subcommand_from precache"
complete -c flutter -l web -d "Precache artifacts for web development." -n "__fish_seen_subcommand_from precache"
complete -c flutter -l no-web -d "Precache artifacts for web development." -n "__fish_seen_subcommand_from precache"
complete -c flutter -l linux -d "Precache artifacts for Linux desktop development." -n "__fish_seen_subcommand_from precache"
complete -c flutter -l no-linux -d "Precache artifacts for Linux desktop development." -n "__fish_seen_subcommand_from precache"
complete -c flutter -l windows -d "Precache artifacts for Windows desktop development." -n "__fish_seen_subcommand_from precache"
complete -c flutter -l no-windows -d "Precache artifacts for Windows desktop development." -n "__fish_seen_subcommand_from precache"
complete -c flutter -l macos -d "Precache artifacts for macOS desktop development." -n "__fish_seen_subcommand_from precache"
complete -c flutter -l no-macos -d "Precache artifacts for macOS desktop development." -n "__fish_seen_subcommand_from precache"
complete -c flutter -l fuchsia -d "Precache artifacts for Fuchsia development." -n "__fish_seen_subcommand_from precache"
complete -c flutter -l no-fuchsia -d "Precache artifacts for Fuchsia development." -n "__fish_seen_subcommand_from precache"
complete -c flutter -l universal -d "Precache artifacts required for any development platform.(defaults to on)" -n "__fish_seen_subcommand_from precache"
complete -c flutter -l no-universal -d "Precache artifacts required for any development platform.(defaults to on)" -n "__fish_seen_subcommand_from precache"
complete -c flutter -f -n "not __fish_seen_subcommand_from $commands" -a pub -d "Commands for managing Flutter packages."
complete -c flutter -l help -d "Print this usage information." -s h -n "__fish_seen_subcommand_from pub"
set -l pub_commands add cache deps downgrade get global login logout outdated publish remove run test upgrade uploader version
complete -c flutter -f -n "__fish_seen_subcommand_from pub; and not __fish_seen_subcommand_from $pub_commands" -a add -d "Add a dependency to pubspec.yaml.."
complete -c flutter -f -n "__fish_seen_subcommand_from pub; and not __fish_seen_subcommand_from $pub_commands" -a cache -d "Work with the Pub system cache."
complete -c flutter -f -n "__fish_seen_subcommand_from pub; and not __fish_seen_subcommand_from $pub_commands" -a deps -d "Print package dependencies."
complete -c flutter -f -n "__fish_seen_subcommand_from pub; and not __fish_seen_subcommand_from $pub_commands" -a downgrade -d "Downgrade packages in a Flutter project."
complete -c flutter -f -n "__fish_seen_subcommand_from pub; and not __fish_seen_subcommand_from $pub_commands" -a get -d "Get packages in a Flutter project."
complete -c flutter -l help -d "Print this usage information." -s h -n "__fish_seen_subcommand_from pub;__fish_seen_subcommand_from get"
complete -c flutter -l offline -d "Use cached packages instead of accessing the network." -n "__fish_seen_subcommand_from pub;__fish_seen_subcommand_from get"
complete -c flutter -f -n "__fish_seen_subcommand_from pub; and not __fish_seen_subcommand_from $pub_commands" -a global -d "Work with Pub global packages."
complete -c flutter -f -n "__fish_seen_subcommand_from pub; and not __fish_seen_subcommand_from $pub_commands" -a login -d "Log into pub.dev.."
complete -c flutter -f -n "__fish_seen_subcommand_from pub; and not __fish_seen_subcommand_from $pub_commands" -a logout -d "Log out of pub.dev.."
complete -c flutter -f -n "__fish_seen_subcommand_from pub; and not __fish_seen_subcommand_from $pub_commands" -a outdated -d "Analyze dependencies to find which ones can be upgraded."
complete -c flutter -f -n "__fish_seen_subcommand_from pub; and not __fish_seen_subcommand_from $pub_commands" -a pub -d "Pass the remaining arguments to Dart's "pub" tool."
complete -c flutter -l help -d "Print this usage information." -s h -n "__fish_seen_subcommand_from pub;__fish_seen_subcommand_from pub"
complete -c flutter -f -n "__fish_seen_subcommand_from pub; and not __fish_seen_subcommand_from $pub_commands" -a publish -d "Publish the current package to pub.dartlang.org."
complete -c flutter -f -n "__fish_seen_subcommand_from pub; and not __fish_seen_subcommand_from $pub_commands" -a remove -d "Removes a dependency from the current package.."
complete -c flutter -f -n "__fish_seen_subcommand_from pub; and not __fish_seen_subcommand_from $pub_commands" -a run -d "Run an executable from a package."
complete -c flutter -f -n "__fish_seen_subcommand_from pub; and not __fish_seen_subcommand_from $pub_commands" -a test -d "Run the "test" package."
complete -c flutter -l help -d "Print this usage information." -s h -n "__fish_seen_subcommand_from pub;__fish_seen_subcommand_from test"
complete -c flutter -f -n "__fish_seen_subcommand_from pub; and not __fish_seen_subcommand_from $pub_commands" -a upgrade -d "Upgrade the current package's dependencies to latest versions.."
complete -c flutter -f -n "__fish_seen_subcommand_from pub; and not __fish_seen_subcommand_from $pub_commands" -a uploader -d "Manage uploaders for a package on pub.dev."
complete -c flutter -f -n "__fish_seen_subcommand_from pub; and not __fish_seen_subcommand_from $pub_commands" -a version -d "Print Pub version."
complete -c flutter -f -n "not __fish_seen_subcommand_from $commands" -a run -d "Run your Flutter app on an attached device."
complete -c flutter -l help -d "Print this usage information." -s h -n "__fish_seen_subcommand_from run"
complete -c flutter -l debug -d "Build a debug version of your app (default mode)." -n "__fish_seen_subcommand_from run"
complete -c flutter -l profile -d "Build a version of your app specialized for performance profiling." -n "__fish_seen_subcommand_from run"
complete -c flutter -l release -d "Build a release version of your app." -n "__fish_seen_subcommand_from run"
complete -c flutter -l dart-define -d "Additional key-value pairs that will be available as constants from the String.fromEnvironment, bool.fromEnvironment, int.fromEnvironment, and double.fromEnvironment constructors.Multiple defines can be passed by repeating \"--dart-define\" multiple times." -n "__fish_seen_subcommand_from run"
complete -c flutter -l flavor -d "Build a custom app flavor as defined by platform-specific build setup.Supports the use of product flavors in Android Gradle scripts, and the use of custom Xcode schemes." -n "__fish_seen_subcommand_from run"
complete -c flutter -l web-renderer -d "The renderer implementation to use when building for the web.[auto] (default)                        Use the HTML renderer on mobile devices, and CanvasKit on desktop devices.[canvaskit]                             Always use the CanvasKit renderer. This renderer uses WebGL and WebAssembly to render graphics.[html]                                  Always use the HTML renderer. This renderer uses a combination of HTML, CSS, SVG, 2D Canvas, and WebGL. This is the default." -n "__fish_seen_subcommand_from run"
complete -c flutter -l trace-startup -d "Trace application startup, then exit, saving the trace to a file. By default, this will be saved in the \"build\" directory. If the FLUTTER_TEST_OUTPUTS_DIR environment variable is set, the file will be written there instead." -n "__fish_seen_subcommand_from run"
complete -c flutter -l verbose-system-logs -d "Include verbose logging from the Flutter engine." -n "__fish_seen_subcommand_from run"
complete -c flutter -l cache-sksl -d "Cache the shader in the SkSL format instead of in binary or GLSL formats." -n "__fish_seen_subcommand_from run"
complete -c flutter -l dump-skp-on-shader-compilation -d "Automatically dump the skp that triggers new shader compilations. This is useful for writing custom ShaderWarmUp to reduce jank. By default, this is not enabled as it introduces significant overhead. This is only available in profile or debug builds." -n "__fish_seen_subcommand_from run"
complete -c flutter -l purge-persistent-cache -d "Removes all existing persistent caches. This allows reproducing shader compilation jank that normally only happens the first time an app is run, or for reliable testing of compilation jank fixes (e.g. shader warm-up)." -n "__fish_seen_subcommand_from run"
complete -c flutter -l route -d "Which route to load when running the app." -n "__fish_seen_subcommand_from run"
complete -c flutter -l use-application-binary -d "Specify a pre-built application binary to use when running. For Android applications, this must be the path to an APK. For iOS applications, the path to an IPA. Other device types do not yet support prebuilt application binaries." -n "__fish_seen_subcommand_from run"
complete -c flutter -l start-paused -d "Start in a paused mode and wait for a debugger to connect." -n "__fish_seen_subcommand_from run"
complete -c flutter -l no-start-paused -d "Start in a paused mode and wait for a debugger to connect." -n "__fish_seen_subcommand_from run"
complete -c flutter -l endless-trace-buffer -d "Enable tracing to an infinite buffer, instead of a ring buffer. This is useful when recording large traces. To use an endless buffer to record startup traces, combine this with \"--trace-startup\"." -n "__fish_seen_subcommand_from run"
complete -c flutter -l trace-systrace -d "Enable tracing to the system tracer. This is only useful on platforms where such a tracer is available (Android and Fuchsia)." -n "__fish_seen_subcommand_from run"
complete -c flutter -l trace-skia -d "Enable tracing of Skia code. This is useful when debugging the raster thread (formerly known as the GPU thread). By default, Flutter will not log Skia code, as it introduces significant overhead that may affect recorded performance metrics in a misleading way." -n "__fish_seen_subcommand_from run"
complete -c flutter -l dart-entrypoint-args -d "Pass a list of arguments to the Dart entrypoint at application startup. By default this is main(List<String> args). Specify this option multiple times each with one argument to pass multiple arguments to the Dart entrypoint. Currently this is only supported on desktop platforms." -s a -n "__fish_seen_subcommand_from run"
complete -c flutter -l target -d "The main entry-point file of the application, as run on the device.If the \"--target\" option is omitted, but a file name is provided on the command line, then that is used instead.(defaults to \"lib/main.dart\")" -s t -n "__fish_seen_subcommand_from run"
complete -c flutter -l device-vmservice-port -d "Look for vmservice connections only from the specified port.Specifying port 0 (the default) will accept the first vmservice discovered." -n "__fish_seen_subcommand_from run"
complete -c flutter -l host-vmservice-port -d "When a device-side vmservice port is forwarded to a host-side port, use this value as the host port.Specifying port 0 (the default) will find a random free host port." -n "__fish_seen_subcommand_from run"
complete -c flutter -l pub -d "Whether to run \"flutter pub get\" before executing this command.(defaults to on)" -n "__fish_seen_subcommand_from run"
complete -c flutter -l no-pub -d "Whether to run \"flutter pub get\" before executing this command.(defaults to on)" -n "__fish_seen_subcommand_from run"
complete -c flutter -l track-widget-creation -d "Track widget creation locations. This enables features such as the widget inspector. This parameter is only functional in debug mode (i.e. when compiling JIT, not AOT).(defaults to on)" -n "__fish_seen_subcommand_from run"
complete -c flutter -l no-track-widget-creation -d "Track widget creation locations. This enables features such as the widget inspector. This parameter is only functional in debug mode (i.e. when compiling JIT, not AOT).(defaults to on)" -n "__fish_seen_subcommand_from run"
complete -c flutter -l null-assertions -d "Perform additional null assertions on the boundaries of migrated and un-migrated code. This setting is not currently supported on desktop devices." -n "__fish_seen_subcommand_from run"
complete -c flutter -l no-null-assertions -d "Perform additional null assertions on the boundaries of migrated and un-migrated code. This setting is not currently supported on desktop devices." -n "__fish_seen_subcommand_from run"
complete -c flutter -l device-user -d "Identifier number for a user or work profile on Android only. Run \"adb shell pm list users\" for available identifiers." -n "__fish_seen_subcommand_from run"
complete -c flutter -l device-timeout -d "Time in seconds to wait for devices to attach. Longer timeouts may be necessary for networked devices." -n "__fish_seen_subcommand_from run"
complete -c flutter -l dds-port -d "When this value is provided, the Dart Development Service (DDS) will be bound to the provided port.Specifying port 0 (the default) will find a random free port." -n "__fish_seen_subcommand_from run"
complete -c flutter -l enable-software-rendering -d "Enable rendering using the Skia software backend. This is useful when testing Flutter on emulators. By default, Flutter will attempt to either use OpenGL or Vulkan and fall back to software when neither is available." -n "__fish_seen_subcommand_from run"
complete -c flutter -l skia-deterministic-rendering -d "When combined with \"--enable-software-rendering\", this should provide completely deterministic (i.e. reproducible) Skia rendering. This is useful for testing purposes (e.g. when comparing screenshots)." -n "__fish_seen_subcommand_from run"
complete -c flutter -l await-first-frame-when-tracing -d "Whether to wait for the first frame when tracing startup (\"--trace-startup\"), or just dump the trace as soon as the application is running. The first frame is detected by looking for a Timeline event with the name \"Rasterized first useful frame\". By default, the widgets library's binding takes care of sending this event.(defaults to on)" -n "__fish_seen_subcommand_from run"
complete -c flutter -l no-await-first-frame-when-tracing -d "Whether to wait for the first frame when tracing startup (\"--trace-startup\"), or just dump the trace as soon as the application is running. The first frame is detected by looking for a Timeline event with the name \"Rasterized first useful frame\". By default, the widgets library's binding takes care of sending this event.(defaults to on)" -n "__fish_seen_subcommand_from run"
complete -c flutter -l use-test-fonts -d "Enable (and default to) the \"Ahem\" font. This is a special font used in tests to remove any dependencies on the font metrics. It is enabled when you use \"flutter test\". Set this flag when running a test using \"flutter run\" for debugging purposes. This flag is only available when running in debug mode." -n "__fish_seen_subcommand_from run"
complete -c flutter -l no-use-test-fonts -d "Enable (and default to) the \"Ahem\" font. This is a special font used in tests to remove any dependencies on the font metrics. It is enabled when you use \"flutter test\". Set this flag when running a test using \"flutter run\" for debugging purposes. This flag is only available when running in debug mode." -n "__fish_seen_subcommand_from run"
complete -c flutter -l build -d "If necessary, build the app before running.(defaults to on)" -n "__fish_seen_subcommand_from run"
complete -c flutter -l no-build -d "If necessary, build the app before running.(defaults to on)" -n "__fish_seen_subcommand_from run"
complete -c flutter -l hot -d "Run with support for hot reloading. Only available for debug mode. Not available with \"--trace-startup\".(defaults to on)" -n "__fish_seen_subcommand_from run"
complete -c flutter -l no-hot -d "Run with support for hot reloading. Only available for debug mode. Not available with \"--trace-startup\".(defaults to on)" -n "__fish_seen_subcommand_from run"
complete -c flutter -l pid-file -d "Specify a file to write the process ID to. You can send SIGUSR1 to trigger a hot reload and SIGUSR2 to trigger a hot restart. The file is created when the signal handlers are hooked and deleted when they are removed." -n "__fish_seen_subcommand_from run"
complete -c flutter -f -n "not __fish_seen_subcommand_from $commands" -a screenshot -d "Take a screenshot from a connected device."
complete -c flutter -l help -d "Print this usage information." -s h -n "__fish_seen_subcommand_from screenshot"
complete -c flutter -l out -d "Location to write the screenshot." -s o -n "__fish_seen_subcommand_from screenshot"
complete -c flutter -l observatory-uri -d "The Observatory URL to which to connect.This is required when \"--type\" is \"skia\" or \"rasterizer\".To find the Observatory URL, use \"flutter run\" and look for \"An Observatory ... is available at\" in the output." -n "__fish_seen_subcommand_from screenshot"
complete -c flutter -l type -d "The type of screenshot to retrieve.[device] (default)    Delegate to the device's native screenshot capabilities. This screenshots the entire screen currently being displayed (including content not rendered by Flutter, like the device status bar).[rasterizer]          Render the Flutter app using the rasterizer. Requires \"--observatory-uri.\"[skia]                Render the Flutter app as a Skia picture. Requires \"--observatory-uri\"." -n "__fish_seen_subcommand_from screenshot"
complete -c flutter -l device-timeout -d "Time in seconds to wait for devices to attach. Longer timeouts may be necessary for networked devices." -n "__fish_seen_subcommand_from screenshot"
complete -c flutter -f -n "not __fish_seen_subcommand_from $commands" -a symbolize -d "Symbolize a stack trace from an AOT-compiled Flutter app."
complete -c flutter -l help -d "Print this usage information." -s h -n "__fish_seen_subcommand_from symbolize"
complete -c flutter -l debug-info -d "A path to the symbols file generated with \"--split-debug-info\"." -s d -n "__fish_seen_subcommand_from symbolize" -xa "(__fish_flutter_devices)"
complete -c flutter -l input -d "A file path containing a Dart stack trace." -s i -n "__fish_seen_subcommand_from symbolize"
complete -c flutter -l output -d "A file path for a symbolized stack trace to be written to." -s o -n "__fish_seen_subcommand_from symbolize"
complete -c flutter -f -n "not __fish_seen_subcommand_from $commands" -a test -d "Run Flutter unit tests for the current project."
complete -c flutter -l help -d "Print this usage information." -s h -n "__fish_seen_subcommand_from test"
complete -c flutter -l pub -d "Whether to run \"flutter pub get\" before executing this command.(defaults to on)" -n "__fish_seen_subcommand_from test"
complete -c flutter -l no-pub -d "Whether to run \"flutter pub get\" before executing this command.(defaults to on)" -n "__fish_seen_subcommand_from test"
complete -c flutter -l null-assertions -d "Perform additional null assertions on the boundaries of migrated and un-migrated code. This setting is not currently supported on desktop devices." -n "__fish_seen_subcommand_from test"
complete -c flutter -l no-null-assertions -d "Perform additional null assertions on the boundaries of migrated and un-migrated code. This setting is not currently supported on desktop devices." -n "__fish_seen_subcommand_from test"
complete -c flutter -l track-widget-creation -d "Track widget creation locations. This enables features such as the widget inspector. This parameter is only functional in debug mode (i.e. when compiling JIT, not AOT).(defaults to on)" -n "__fish_seen_subcommand_from test"
complete -c flutter -l no-track-widget-creation -d "Track widget creation locations. This enables features such as the widget inspector. This parameter is only functional in debug mode (i.e. when compiling JIT, not AOT).(defaults to on)" -n "__fish_seen_subcommand_from test"
complete -c flutter -l dart-define -d "Additional key-value pairs that will be available as constants from the String.fromEnvironment, bool.fromEnvironment, int.fromEnvironment, and double.fromEnvironment constructors.Multiple defines can be passed by repeating \"--dart-define\" multiple times." -n "__fish_seen_subcommand_from test"
complete -c flutter -l web-renderer -d "The renderer implementation to use when building for the web.[auto] (default)            Use the HTML renderer on mobile devices, and CanvasKit on desktop devices.[canvaskit]                 Always use the CanvasKit renderer. This renderer uses WebGL and WebAssembly to render graphics.[html]                      Always use the HTML renderer. This renderer uses a combination of HTML, CSS, SVG, 2D Canvas, and WebGL. This is the default." -n "__fish_seen_subcommand_from test"
complete -c flutter -l device-user -d "Identifier number for a user or work profile on Android only. Run \"adb shell pm list users\" for available identifiers." -n "__fish_seen_subcommand_from test"
complete -c flutter -l name -d "A regular expression matching substrings of the names of tests to run." -n "__fish_seen_subcommand_from test"
complete -c flutter -l plain-name -d "A plain-text substring of the names of tests to run." -n "__fish_seen_subcommand_from test"
complete -c flutter -l tags -d "Run only tests associated with the specified tags. See: https://pub.dev/packages/test#tagging-tests" -s t -n "__fish_seen_subcommand_from test"
complete -c flutter -l exclude-tags -d "Run only tests that do not have the specified tags. See: https://pub.dev/packages/test#tagging-tests" -s x -n "__fish_seen_subcommand_from test"
complete -c flutter -l start-paused -d "Start in a paused mode and wait for a debugger to connect.You must specify a single test file to run, explicitly.Instructions for connecting with a debugger are printed to the console once the test has started." -n "__fish_seen_subcommand_from test"
complete -c flutter -l run-skipped -d "Run skipped tests instead of skipping them." -n "__fish_seen_subcommand_from test"
complete -c flutter -l no-run-skipped -d "Run skipped tests instead of skipping them." -n "__fish_seen_subcommand_from test"
complete -c flutter -l coverage -d "Whether to collect coverage information." -n "__fish_seen_subcommand_from test"
complete -c flutter -l merge-coverage -d "Whether to merge coverage data with \"coverage/lcov.base.info\".Implies collecting coverage data. (Requires lcov.)" -n "__fish_seen_subcommand_from test"
complete -c flutter -l coverage-path -d "Where to store coverage information (if coverage is enabled).(defaults to \"coverage/lcov.info\")" -n "__fish_seen_subcommand_from test"
complete -c flutter -l update-goldens -d "Whether \"matchesGoldenFile()\" calls within your test methods should update the golden files rather than test for an existing match." -n "__fish_seen_subcommand_from test"
complete -c flutter -l concurrency -d "The number of concurrent test processes to run. This will be ignored when running integration tests.(defaults to \"2\")" -s j -n "__fish_seen_subcommand_from test"
complete -c flutter -l test-assets -d "Whether to build the assets bundle for testing. This takes additional time before running the tests. Consider using \"--no-test-assets\" if assets are not required.(defaults to on)" -n "__fish_seen_subcommand_from test"
complete -c flutter -l no-test-assets -d "Whether to build the assets bundle for testing. This takes additional time before running the tests. Consider using \"--no-test-assets\" if assets are not required.(defaults to on)" -n "__fish_seen_subcommand_from test"
complete -c flutter -l test-randomize-ordering-seed -d "The seed to randomize the execution order of test cases within test files. Must be a 32bit unsigned integer or the string \"random\", which indicates that a seed should be selected randomly. By default, tests run in the order they are declared." -n "__fish_seen_subcommand_from test"
complete -c flutter -l total-shards -d "Tests can be sharded with the \"--total-shards\" and \"--shard-index\" arguments, allowing you to split up your test suites and run them separately." -n "__fish_seen_subcommand_from test"
complete -c flutter -l shard-index -d "Tests can be sharded with the \"--total-shards\" and \"--shard-index\" arguments, allowing you to split up your test suites and run them separately." -n "__fish_seen_subcommand_from test"
complete -c flutter -l reporter -d "Set how to print test results.[compact] (default)         A single line that updates dynamically.[expanded]                  A separate line for each update. May be preferred when logging to a file or in continuous integration.[json]                      A machine-readable format. See: https://dart.dev/go/test-docs/json_reporter.md" -s r -n "__fish_seen_subcommand_from test"
complete -c flutter -l timeout -d "The default test timeout, specified either in seconds (e.g. \"60s\"), as a multiplier of the default timeout (e.g. \"2x\"), or as the string \"none\" to disable the timeout entirely.(defaults to \"30s\")" -n "__fish_seen_subcommand_from test"
complete -c flutter -l dds-port -d "When this value is provided, the Dart Development Service (DDS) will be bound to the provided port.Specifying port 0 (the default) will find a random free port." -n "__fish_seen_subcommand_from test"
complete -c flutter -f -n "not __fish_seen_subcommand_from $commands" -a upgrade -d "Upgrade your copy of Flutter."
complete -c flutter -l help -d "Print this usage information." -s h -n "__fish_seen_subcommand_from upgrade"
complete -c flutter -l force -d "Force upgrade the flutter branch, potentially discarding local changes." -s f -n "__fish_seen_subcommand_from upgrade"
complete -c flutter -l verify-only -d "Checks for any new flutter updates, without actually fetching them." -n "__fish_seen_subcommand_from upgrade"
complete -c flutter -f -n "not __fish_seen_subcommand_from $commands" -a help -d ""
